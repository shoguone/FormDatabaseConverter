//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_Activity", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Activity), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_BadRegistry", "BadRegistry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.BadRegistry), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_ChosenRecruit_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FormDatabaseConverter.EntityModel.Department), "ChosenRecruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.ChosenRecruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_ChosenRecruit_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FormDatabaseConverter.EntityModel.Recruit), "ChosenRecruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.ChosenRecruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_ChosenRecruit_Season", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Season), "ChosenRecruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.ChosenRecruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_Competency", "Competency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Competency), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Department_Season", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Season), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Department), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_Department", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Department), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_MilitaryCertificate_Deputy", "Deputy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Deputy), "MilitaryCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.MilitaryCertificate), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squad_Deputy", "Deputy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Deputy), "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squad), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Dismissal_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "Dismissal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Dismissal), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_DriverLicense_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "DriverLicense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.DriverLicense), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_DutyForm_PermissionForm", "PermissionForm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FormDatabaseConverter.EntityModel.PermissionForm), "DutyForm", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.DutyForm), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_DutyForm", "DutyForm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.DutyForm), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_SquadDuty_DutyForm", "DutyForm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.DutyForm), "SquadDuty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.SquadDuty), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squad_Echelon", "Echelon", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FormDatabaseConverter.EntityModel.Echelon), "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squad), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_Education", "Education", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Education), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_FamilyStatus", "FamilyStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.FamilyStatus), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_MarriageStatus", "MarriageStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MarriageStatus), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_MedicineCategory", "MedicineCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MedicineCategory), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_MedicineDegree", "MedicineDegree", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MedicineDegree), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_MilitaryCertificate_MilitaryTitle", "MilitaryTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MilitaryTitle), "MilitaryCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.MilitaryCertificate), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Station_MilitaryDistrict", "MilitaryDistrict", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MilitaryDistrict), "Station", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Station), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_MilitaryUnit_MilitaryForces", "MilitaryForces", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MilitaryForces), "MilitaryUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.MilitaryUnit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_MilitaryUnit_Station", "Station", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Station), "MilitaryUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.MilitaryUnit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Phone_MilitaryUnit", "MilitaryUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MilitaryUnit), "Phone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Phone), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squadron_MilitaryUnit", "MilitaryUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.MilitaryUnit), "Squadron", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squadron), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_NeuroPsychicStability", "NeuroPsychicStability", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.NeuroPsychicStability), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squad_OrderSoldier", "OrderSoldier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(FormDatabaseConverter.EntityModel.OrderSoldier), "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squad), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Permission_PermissionForm", "PermissionForm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.PermissionForm), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Permission), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Permission_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Permission), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Station_Railroad", "Railroad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Railroad), "Station", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Station), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_Speciality", "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Speciality), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_Squad", "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Squad), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Recruit_TDT", "TDT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.TDT), "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Recruit), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_RecruitsLog_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "RecruitsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.RecruitsLog), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_RecruitSport_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "RecruitSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.RecruitSport), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Relative_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "Relative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Relative), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Return_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "Return", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Return), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_SelfDesiredAbsence_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "SelfDesiredAbsence", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.SelfDesiredAbsence), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Token_Recruit", "Recruit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Recruit), "Token", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Token), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_RecruitsLog_NewSquad", "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Squad), "RecruitsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.RecruitsLog), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_RecruitsLog_OldSquad", "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Squad), "RecruitsLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.RecruitsLog), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_RecruitSport_SportCategory", "SportCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.SportCategory), "RecruitSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.RecruitSport), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_RecruitSport_SportType", "SportType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.SportType), "RecruitSport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.RecruitSport), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squadron_Season", "Season", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Season), "Squadron", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squadron), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squad_SquadDuty", "SquadDuty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.SquadDuty), "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squad), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "FK_Squad_Squadron", "Squadron", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FormDatabaseConverter.EntityModel.Squadron), "Squad", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Squad), true)]
[assembly: EdmRelationshipAttribute("BrandNewModel", "SpecialitySquadDuty", "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.Speciality), "SquadDuty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FormDatabaseConverter.EntityModel.SquadDuty))]

#endregion

namespace FormDatabaseConverter.EntityModel
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class BrandNewContext : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект BrandNewContext, используя строку соединения из раздела "BrandNewContext" файла конфигурации приложения.
        /// </summary>
        public BrandNewContext() : base("name=BrandNewContext", "BrandNewContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта BrandNewContext.
        /// </summary>
        public BrandNewContext(string connectionString) : base(connectionString, "BrandNewContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта BrandNewContext.
        /// </summary>
        public BrandNewContext(EntityConnection connection) : base(connection, "BrandNewContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Activity> Activity
        {
            get
            {
                if ((_Activity == null))
                {
                    _Activity = base.CreateObjectSet<Activity>("Activity");
                }
                return _Activity;
            }
        }
        private ObjectSet<Activity> _Activity;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<BadRegistry> BadRegistry
        {
            get
            {
                if ((_BadRegistry == null))
                {
                    _BadRegistry = base.CreateObjectSet<BadRegistry>("BadRegistry");
                }
                return _BadRegistry;
            }
        }
        private ObjectSet<BadRegistry> _BadRegistry;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ChosenRecruit> ChosenRecruit
        {
            get
            {
                if ((_ChosenRecruit == null))
                {
                    _ChosenRecruit = base.CreateObjectSet<ChosenRecruit>("ChosenRecruit");
                }
                return _ChosenRecruit;
            }
        }
        private ObjectSet<ChosenRecruit> _ChosenRecruit;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Competency> Competency
        {
            get
            {
                if ((_Competency == null))
                {
                    _Competency = base.CreateObjectSet<Competency>("Competency");
                }
                return _Competency;
            }
        }
        private ObjectSet<Competency> _Competency;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Department> Department
        {
            get
            {
                if ((_Department == null))
                {
                    _Department = base.CreateObjectSet<Department>("Department");
                }
                return _Department;
            }
        }
        private ObjectSet<Department> _Department;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Deputy> Deputy
        {
            get
            {
                if ((_Deputy == null))
                {
                    _Deputy = base.CreateObjectSet<Deputy>("Deputy");
                }
                return _Deputy;
            }
        }
        private ObjectSet<Deputy> _Deputy;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Dismissal> Dismissal
        {
            get
            {
                if ((_Dismissal == null))
                {
                    _Dismissal = base.CreateObjectSet<Dismissal>("Dismissal");
                }
                return _Dismissal;
            }
        }
        private ObjectSet<Dismissal> _Dismissal;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DriverLicense> DriverLicense
        {
            get
            {
                if ((_DriverLicense == null))
                {
                    _DriverLicense = base.CreateObjectSet<DriverLicense>("DriverLicense");
                }
                return _DriverLicense;
            }
        }
        private ObjectSet<DriverLicense> _DriverLicense;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DutyForm> DutyForm
        {
            get
            {
                if ((_DutyForm == null))
                {
                    _DutyForm = base.CreateObjectSet<DutyForm>("DutyForm");
                }
                return _DutyForm;
            }
        }
        private ObjectSet<DutyForm> _DutyForm;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Echelon> Echelon
        {
            get
            {
                if ((_Echelon == null))
                {
                    _Echelon = base.CreateObjectSet<Echelon>("Echelon");
                }
                return _Echelon;
            }
        }
        private ObjectSet<Echelon> _Echelon;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Education> Education
        {
            get
            {
                if ((_Education == null))
                {
                    _Education = base.CreateObjectSet<Education>("Education");
                }
                return _Education;
            }
        }
        private ObjectSet<Education> _Education;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<FamilyStatus> FamilyStatus
        {
            get
            {
                if ((_FamilyStatus == null))
                {
                    _FamilyStatus = base.CreateObjectSet<FamilyStatus>("FamilyStatus");
                }
                return _FamilyStatus;
            }
        }
        private ObjectSet<FamilyStatus> _FamilyStatus;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MarriageStatus> MarriageStatus
        {
            get
            {
                if ((_MarriageStatus == null))
                {
                    _MarriageStatus = base.CreateObjectSet<MarriageStatus>("MarriageStatus");
                }
                return _MarriageStatus;
            }
        }
        private ObjectSet<MarriageStatus> _MarriageStatus;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MedicineCategory> MedicineCategory
        {
            get
            {
                if ((_MedicineCategory == null))
                {
                    _MedicineCategory = base.CreateObjectSet<MedicineCategory>("MedicineCategory");
                }
                return _MedicineCategory;
            }
        }
        private ObjectSet<MedicineCategory> _MedicineCategory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MedicineDegree> MedicineDegree
        {
            get
            {
                if ((_MedicineDegree == null))
                {
                    _MedicineDegree = base.CreateObjectSet<MedicineDegree>("MedicineDegree");
                }
                return _MedicineDegree;
            }
        }
        private ObjectSet<MedicineDegree> _MedicineDegree;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MilitaryCertificate> MilitaryCertificate
        {
            get
            {
                if ((_MilitaryCertificate == null))
                {
                    _MilitaryCertificate = base.CreateObjectSet<MilitaryCertificate>("MilitaryCertificate");
                }
                return _MilitaryCertificate;
            }
        }
        private ObjectSet<MilitaryCertificate> _MilitaryCertificate;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MilitaryDistrict> MilitaryDistrict
        {
            get
            {
                if ((_MilitaryDistrict == null))
                {
                    _MilitaryDistrict = base.CreateObjectSet<MilitaryDistrict>("MilitaryDistrict");
                }
                return _MilitaryDistrict;
            }
        }
        private ObjectSet<MilitaryDistrict> _MilitaryDistrict;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MilitaryForces> MilitaryForces
        {
            get
            {
                if ((_MilitaryForces == null))
                {
                    _MilitaryForces = base.CreateObjectSet<MilitaryForces>("MilitaryForces");
                }
                return _MilitaryForces;
            }
        }
        private ObjectSet<MilitaryForces> _MilitaryForces;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MilitaryTitle> MilitaryTitle
        {
            get
            {
                if ((_MilitaryTitle == null))
                {
                    _MilitaryTitle = base.CreateObjectSet<MilitaryTitle>("MilitaryTitle");
                }
                return _MilitaryTitle;
            }
        }
        private ObjectSet<MilitaryTitle> _MilitaryTitle;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<MilitaryUnit> MilitaryUnit
        {
            get
            {
                if ((_MilitaryUnit == null))
                {
                    _MilitaryUnit = base.CreateObjectSet<MilitaryUnit>("MilitaryUnit");
                }
                return _MilitaryUnit;
            }
        }
        private ObjectSet<MilitaryUnit> _MilitaryUnit;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<NeuroPsychicStability> NeuroPsychicStability
        {
            get
            {
                if ((_NeuroPsychicStability == null))
                {
                    _NeuroPsychicStability = base.CreateObjectSet<NeuroPsychicStability>("NeuroPsychicStability");
                }
                return _NeuroPsychicStability;
            }
        }
        private ObjectSet<NeuroPsychicStability> _NeuroPsychicStability;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OrderSoldier> OrderSoldier
        {
            get
            {
                if ((_OrderSoldier == null))
                {
                    _OrderSoldier = base.CreateObjectSet<OrderSoldier>("OrderSoldier");
                }
                return _OrderSoldier;
            }
        }
        private ObjectSet<OrderSoldier> _OrderSoldier;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Permission> Permission
        {
            get
            {
                if ((_Permission == null))
                {
                    _Permission = base.CreateObjectSet<Permission>("Permission");
                }
                return _Permission;
            }
        }
        private ObjectSet<Permission> _Permission;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<PermissionForm> PermissionForm
        {
            get
            {
                if ((_PermissionForm == null))
                {
                    _PermissionForm = base.CreateObjectSet<PermissionForm>("PermissionForm");
                }
                return _PermissionForm;
            }
        }
        private ObjectSet<PermissionForm> _PermissionForm;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Phone> Phone
        {
            get
            {
                if ((_Phone == null))
                {
                    _Phone = base.CreateObjectSet<Phone>("Phone");
                }
                return _Phone;
            }
        }
        private ObjectSet<Phone> _Phone;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Railroad> Railroad
        {
            get
            {
                if ((_Railroad == null))
                {
                    _Railroad = base.CreateObjectSet<Railroad>("Railroad");
                }
                return _Railroad;
            }
        }
        private ObjectSet<Railroad> _Railroad;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Recruit> Recruit
        {
            get
            {
                if ((_Recruit == null))
                {
                    _Recruit = base.CreateObjectSet<Recruit>("Recruit");
                }
                return _Recruit;
            }
        }
        private ObjectSet<Recruit> _Recruit;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RecruitsLog> RecruitsLog
        {
            get
            {
                if ((_RecruitsLog == null))
                {
                    _RecruitsLog = base.CreateObjectSet<RecruitsLog>("RecruitsLog");
                }
                return _RecruitsLog;
            }
        }
        private ObjectSet<RecruitsLog> _RecruitsLog;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RecruitSport> RecruitSport
        {
            get
            {
                if ((_RecruitSport == null))
                {
                    _RecruitSport = base.CreateObjectSet<RecruitSport>("RecruitSport");
                }
                return _RecruitSport;
            }
        }
        private ObjectSet<RecruitSport> _RecruitSport;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Relative> Relative
        {
            get
            {
                if ((_Relative == null))
                {
                    _Relative = base.CreateObjectSet<Relative>("Relative");
                }
                return _Relative;
            }
        }
        private ObjectSet<Relative> _Relative;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Return> Return
        {
            get
            {
                if ((_Return == null))
                {
                    _Return = base.CreateObjectSet<Return>("Return");
                }
                return _Return;
            }
        }
        private ObjectSet<Return> _Return;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Season> Season
        {
            get
            {
                if ((_Season == null))
                {
                    _Season = base.CreateObjectSet<Season>("Season");
                }
                return _Season;
            }
        }
        private ObjectSet<Season> _Season;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SelfDesiredAbsence> SelfDesiredAbsence
        {
            get
            {
                if ((_SelfDesiredAbsence == null))
                {
                    _SelfDesiredAbsence = base.CreateObjectSet<SelfDesiredAbsence>("SelfDesiredAbsence");
                }
                return _SelfDesiredAbsence;
            }
        }
        private ObjectSet<SelfDesiredAbsence> _SelfDesiredAbsence;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Speciality> Speciality
        {
            get
            {
                if ((_Speciality == null))
                {
                    _Speciality = base.CreateObjectSet<Speciality>("Speciality");
                }
                return _Speciality;
            }
        }
        private ObjectSet<Speciality> _Speciality;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SportCategory> SportCategory
        {
            get
            {
                if ((_SportCategory == null))
                {
                    _SportCategory = base.CreateObjectSet<SportCategory>("SportCategory");
                }
                return _SportCategory;
            }
        }
        private ObjectSet<SportCategory> _SportCategory;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SportType> SportType
        {
            get
            {
                if ((_SportType == null))
                {
                    _SportType = base.CreateObjectSet<SportType>("SportType");
                }
                return _SportType;
            }
        }
        private ObjectSet<SportType> _SportType;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Squad> Squad
        {
            get
            {
                if ((_Squad == null))
                {
                    _Squad = base.CreateObjectSet<Squad>("Squad");
                }
                return _Squad;
            }
        }
        private ObjectSet<Squad> _Squad;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<SquadDuty> SquadDuty
        {
            get
            {
                if ((_SquadDuty == null))
                {
                    _SquadDuty = base.CreateObjectSet<SquadDuty>("SquadDuty");
                }
                return _SquadDuty;
            }
        }
        private ObjectSet<SquadDuty> _SquadDuty;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Squadron> Squadron
        {
            get
            {
                if ((_Squadron == null))
                {
                    _Squadron = base.CreateObjectSet<Squadron>("Squadron");
                }
                return _Squadron;
            }
        }
        private ObjectSet<Squadron> _Squadron;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Station> Station
        {
            get
            {
                if ((_Station == null))
                {
                    _Station = base.CreateObjectSet<Station>("Station");
                }
                return _Station;
            }
        }
        private ObjectSet<Station> _Station;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TDT> TDT
        {
            get
            {
                if ((_TDT == null))
                {
                    _TDT = base.CreateObjectSet<TDT>("TDT");
                }
                return _TDT;
            }
        }
        private ObjectSet<TDT> _TDT;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Token> Token
        {
            get
            {
                if ((_Token == null))
                {
                    _Token = base.CreateObjectSet<Token>("Token");
                }
                return _Token;
            }
        }
        private ObjectSet<Token> _Token;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Activity. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActivity(Activity activity)
        {
            base.AddObject("Activity", activity);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet BadRegistry. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBadRegistry(BadRegistry badRegistry)
        {
            base.AddObject("BadRegistry", badRegistry);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ChosenRecruit. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToChosenRecruit(ChosenRecruit chosenRecruit)
        {
            base.AddObject("ChosenRecruit", chosenRecruit);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Competency. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCompetency(Competency competency)
        {
            base.AddObject("Competency", competency);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Department. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDepartment(Department department)
        {
            base.AddObject("Department", department);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Deputy. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDeputy(Deputy deputy)
        {
            base.AddObject("Deputy", deputy);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Dismissal. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDismissal(Dismissal dismissal)
        {
            base.AddObject("Dismissal", dismissal);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DriverLicense. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDriverLicense(DriverLicense driverLicense)
        {
            base.AddObject("DriverLicense", driverLicense);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DutyForm. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDutyForm(DutyForm dutyForm)
        {
            base.AddObject("DutyForm", dutyForm);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Echelon. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEchelon(Echelon echelon)
        {
            base.AddObject("Echelon", echelon);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Education. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEducation(Education education)
        {
            base.AddObject("Education", education);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet FamilyStatus. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFamilyStatus(FamilyStatus familyStatus)
        {
            base.AddObject("FamilyStatus", familyStatus);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MarriageStatus. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMarriageStatus(MarriageStatus marriageStatus)
        {
            base.AddObject("MarriageStatus", marriageStatus);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MedicineCategory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMedicineCategory(MedicineCategory medicineCategory)
        {
            base.AddObject("MedicineCategory", medicineCategory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MedicineDegree. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMedicineDegree(MedicineDegree medicineDegree)
        {
            base.AddObject("MedicineDegree", medicineDegree);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MilitaryCertificate. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMilitaryCertificate(MilitaryCertificate militaryCertificate)
        {
            base.AddObject("MilitaryCertificate", militaryCertificate);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MilitaryDistrict. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMilitaryDistrict(MilitaryDistrict militaryDistrict)
        {
            base.AddObject("MilitaryDistrict", militaryDistrict);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MilitaryForces. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMilitaryForces(MilitaryForces militaryForces)
        {
            base.AddObject("MilitaryForces", militaryForces);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MilitaryTitle. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMilitaryTitle(MilitaryTitle militaryTitle)
        {
            base.AddObject("MilitaryTitle", militaryTitle);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet MilitaryUnit. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMilitaryUnit(MilitaryUnit militaryUnit)
        {
            base.AddObject("MilitaryUnit", militaryUnit);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet NeuroPsychicStability. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToNeuroPsychicStability(NeuroPsychicStability neuroPsychicStability)
        {
            base.AddObject("NeuroPsychicStability", neuroPsychicStability);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OrderSoldier. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrderSoldier(OrderSoldier orderSoldier)
        {
            base.AddObject("OrderSoldier", orderSoldier);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Permission. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPermission(Permission permission)
        {
            base.AddObject("Permission", permission);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet PermissionForm. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPermissionForm(PermissionForm permissionForm)
        {
            base.AddObject("PermissionForm", permissionForm);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Phone. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPhone(Phone phone)
        {
            base.AddObject("Phone", phone);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Railroad. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRailroad(Railroad railroad)
        {
            base.AddObject("Railroad", railroad);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Recruit. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRecruit(Recruit recruit)
        {
            base.AddObject("Recruit", recruit);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RecruitsLog. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRecruitsLog(RecruitsLog recruitsLog)
        {
            base.AddObject("RecruitsLog", recruitsLog);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RecruitSport. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRecruitSport(RecruitSport recruitSport)
        {
            base.AddObject("RecruitSport", recruitSport);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Relative. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRelative(Relative relative)
        {
            base.AddObject("Relative", relative);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Return. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToReturn(Return @return)
        {
            base.AddObject("Return", @return);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Season. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSeason(Season season)
        {
            base.AddObject("Season", season);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SelfDesiredAbsence. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSelfDesiredAbsence(SelfDesiredAbsence selfDesiredAbsence)
        {
            base.AddObject("SelfDesiredAbsence", selfDesiredAbsence);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Speciality. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSpeciality(Speciality speciality)
        {
            base.AddObject("Speciality", speciality);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SportCategory. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSportCategory(SportCategory sportCategory)
        {
            base.AddObject("SportCategory", sportCategory);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SportType. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSportType(SportType sportType)
        {
            base.AddObject("SportType", sportType);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Squad. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSquad(Squad squad)
        {
            base.AddObject("Squad", squad);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet SquadDuty. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSquadDuty(SquadDuty squadDuty)
        {
            base.AddObject("SquadDuty", squadDuty);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Squadron. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSquadron(Squadron squadron)
        {
            base.AddObject("Squadron", squadron);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Station. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStation(Station station)
        {
            base.AddObject("Station", station);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TDT. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTDT(TDT tDT)
        {
            base.AddObject("TDT", tDT);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Token. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToToken(Token token)
        {
            base.AddObject("Token", token);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Activity.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Activity CreateActivity(global::System.Int32 id, global::System.String name)
        {
            Activity activity = new Activity();
            activity.ID = id;
            activity.Name = name;
            return activity;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Activity", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Activity", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Activity", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="BadRegistry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BadRegistry : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта BadRegistry.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static BadRegistry CreateBadRegistry(global::System.Int32 id, global::System.String name)
        {
            BadRegistry badRegistry = new BadRegistry();
            badRegistry.ID = id;
            badRegistry.Name = name;
            return badRegistry;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_BadRegistry", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_BadRegistry", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_BadRegistry", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="ChosenRecruit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChosenRecruit : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ChosenRecruit.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="season_ID">Исходное значение свойства Season_ID.</param>
        public static ChosenRecruit CreateChosenRecruit(global::System.Int32 id, global::System.Int32 season_ID)
        {
            ChosenRecruit chosenRecruit = new ChosenRecruit();
            chosenRecruit.ID = id;
            chosenRecruit.Season_ID = season_ID;
            return chosenRecruit;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                OnDepartment_IDChanging(value);
                ReportPropertyChanging("Department_ID");
                _Department_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Department_ID");
                OnDepartment_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Department_ID;
        partial void OnDepartment_IDChanging(Nullable<global::System.Int32> value);
        partial void OnDepartment_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Destination
        {
            get
            {
                return _Destination;
            }
            set
            {
                OnDestinationChanging(value);
                ReportPropertyChanging("Destination");
                _Destination = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Destination");
                OnDestinationChanged();
            }
        }
        private global::System.String _Destination;
        partial void OnDestinationChanging(global::System.String value);
        partial void OnDestinationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Patron
        {
            get
            {
                return _Patron;
            }
            set
            {
                OnPatronChanging(value);
                ReportPropertyChanging("Patron");
                _Patron = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Patron");
                OnPatronChanged();
            }
        }
        private global::System.String _Patron;
        partial void OnPatronChanging(global::System.String value);
        partial void OnPatronChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Recruit_ID;
        partial void OnRecruit_IDChanging(Nullable<global::System.Int32> value);
        partial void OnRecruit_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season_ID
        {
            get
            {
                return _Season_ID;
            }
            set
            {
                OnSeason_IDChanging(value);
                ReportPropertyChanging("Season_ID");
                _Season_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Season_ID");
                OnSeason_IDChanged();
            }
        }
        private global::System.Int32 _Season_ID;
        partial void OnSeason_IDChanging(global::System.Int32 value);
        partial void OnSeason_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_ChosenRecruit_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BrandNewModel.FK_ChosenRecruit_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BrandNewModel.FK_ChosenRecruit_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BrandNewModel.FK_ChosenRecruit_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("BrandNewModel.FK_ChosenRecruit_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_ChosenRecruit_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_ChosenRecruit_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_ChosenRecruit_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_ChosenRecruit_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_ChosenRecruit_Recruit", "Recruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_ChosenRecruit_Season", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_ChosenRecruit_Season", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_ChosenRecruit_Season", "Season").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_ChosenRecruit_Season", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("BrandNewModel.FK_ChosenRecruit_Season", "Season", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Competency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competency : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Competency.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Competency CreateCompetency(global::System.Int32 id, global::System.String name)
        {
            Competency competency = new Competency();
            competency.ID = id;
            competency.Name = name;
            return competency;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Competency", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Competency", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Competency", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Department.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="nameShort">Исходное значение свойства NameShort.</param>
        /// <param name="season_ID">Исходное значение свойства Season_ID.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String nameShort, global::System.Int32 season_ID)
        {
            Department department = new Department();
            department.ID = id;
            department.NameShort = nameShort;
            department.Season_ID = season_ID;
            return department;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameShort
        {
            get
            {
                return _NameShort;
            }
            set
            {
                OnNameShortChanging(value);
                ReportPropertyChanging("NameShort");
                _NameShort = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameShort");
                OnNameShortChanged();
            }
        }
        private global::System.String _NameShort;
        partial void OnNameShortChanging(global::System.String value);
        partial void OnNameShortChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NameFull
        {
            get
            {
                return _NameFull;
            }
            set
            {
                OnNameFullChanging(value);
                ReportPropertyChanging("NameFull");
                _NameFull = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NameFull");
                OnNameFullChanged();
            }
        }
        private global::System.String _NameFull;
        partial void OnNameFullChanging(global::System.String value);
        partial void OnNameFullChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Shortcut
        {
            get
            {
                return _Shortcut;
            }
            set
            {
                OnShortcutChanging(value);
                ReportPropertyChanging("Shortcut");
                _Shortcut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shortcut");
                OnShortcutChanged();
            }
        }
        private Nullable<global::System.Int32> _Shortcut;
        partial void OnShortcutChanging(Nullable<global::System.Int32> value);
        partial void OnShortcutChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season_ID
        {
            get
            {
                return _Season_ID;
            }
            set
            {
                OnSeason_IDChanging(value);
                ReportPropertyChanging("Season_ID");
                _Season_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Season_ID");
                OnSeason_IDChanged();
            }
        }
        private global::System.Int32 _Season_ID;
        partial void OnSeason_IDChanging(global::System.Int32 value);
        partial void OnSeason_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_ChosenRecruit_Department", "ChosenRecruit")]
        public EntityCollection<ChosenRecruit> ChosenRecruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChosenRecruit>("BrandNewModel.FK_ChosenRecruit_Department", "ChosenRecruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChosenRecruit>("BrandNewModel.FK_ChosenRecruit_Department", "ChosenRecruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Department_Season", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_Department_Season", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_Department_Season", "Season").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_Department_Season", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("BrandNewModel.FK_Department_Season", "Season", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Department", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Department", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Department", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Deputy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deputy : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Deputy.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="secondName">Исходное значение свойства SecondName.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        public static Deputy CreateDeputy(global::System.Int32 id, global::System.String secondName, global::System.String firstName)
        {
            Deputy deputy = new Deputy();
            deputy.ID = id;
            deputy.SecondName = secondName;
            deputy.FirstName = firstName;
            return deputy;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryCertificate_Deputy", "MilitaryCertificate")]
        public EntityCollection<MilitaryCertificate> MilitaryCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MilitaryCertificate>("BrandNewModel.FK_MilitaryCertificate_Deputy", "MilitaryCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MilitaryCertificate>("BrandNewModel.FK_MilitaryCertificate_Deputy", "MilitaryCertificate", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_Deputy", "Squad")]
        public EntityCollection<Squad> Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squad>("BrandNewModel.FK_Squad_Deputy", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squad>("BrandNewModel.FK_Squad_Deputy", "Squad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Dismissal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dismissal : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Dismissal.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="dismissalFrom">Исходное значение свойства DismissalFrom.</param>
        /// <param name="dismissalTo">Исходное значение свойства DismissalTo.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        public static Dismissal CreateDismissal(global::System.Int32 id, global::System.DateTime dismissalFrom, global::System.DateTime dismissalTo, global::System.Int32 recruit_ID)
        {
            Dismissal dismissal = new Dismissal();
            dismissal.ID = id;
            dismissal.DismissalFrom = dismissalFrom;
            dismissal.DismissalTo = dismissalTo;
            dismissal.Recruit_ID = recruit_ID;
            return dismissal;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DismissalFrom
        {
            get
            {
                return _DismissalFrom;
            }
            set
            {
                OnDismissalFromChanging(value);
                ReportPropertyChanging("DismissalFrom");
                _DismissalFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DismissalFrom");
                OnDismissalFromChanged();
            }
        }
        private global::System.DateTime _DismissalFrom;
        partial void OnDismissalFromChanging(global::System.DateTime value);
        partial void OnDismissalFromChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DismissalTo
        {
            get
            {
                return _DismissalTo;
            }
            set
            {
                OnDismissalToChanging(value);
                ReportPropertyChanging("DismissalTo");
                _DismissalTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DismissalTo");
                OnDismissalToChanged();
            }
        }
        private global::System.DateTime _DismissalTo;
        partial void OnDismissalToChanging(global::System.DateTime value);
        partial void OnDismissalToChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SquadNumber
        {
            get
            {
                return _SquadNumber;
            }
            set
            {
                OnSquadNumberChanging(value);
                ReportPropertyChanging("SquadNumber");
                _SquadNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SquadNumber");
                OnSquadNumberChanged();
            }
        }
        private global::System.String _SquadNumber;
        partial void OnSquadNumberChanging(global::System.String value);
        partial void OnSquadNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Dismissal_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Dismissal_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Dismissal_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Dismissal_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_Dismissal_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="DriverLicense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DriverLicense : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DriverLicense.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="serial">Исходное значение свойства Serial.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="isROSTO">Исходное значение свойства IsROSTO.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        public static DriverLicense CreateDriverLicense(global::System.Int32 id, global::System.String serial, global::System.String number, global::System.Boolean isROSTO, global::System.Int32 recruit_ID)
        {
            DriverLicense driverLicense = new DriverLicense();
            driverLicense.ID = id;
            driverLicense.Serial = serial;
            driverLicense.Number = number;
            driverLicense.IsROSTO = isROSTO;
            driverLicense.Recruit_ID = recruit_ID;
            return driverLicense;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial
        {
            get
            {
                return _Serial;
            }
            set
            {
                OnSerialChanging(value);
                ReportPropertyChanging("Serial");
                _Serial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial");
                OnSerialChanged();
            }
        }
        private global::System.String _Serial;
        partial void OnSerialChanging(global::System.String value);
        partial void OnSerialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsROSTO
        {
            get
            {
                return _IsROSTO;
            }
            set
            {
                OnIsROSTOChanging(value);
                ReportPropertyChanging("IsROSTO");
                _IsROSTO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsROSTO");
                OnIsROSTOChanged();
            }
        }
        private global::System.Boolean _IsROSTO;
        partial void OnIsROSTOChanging(global::System.Boolean value);
        partial void OnIsROSTOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_DriverLicense_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_DriverLicense_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_DriverLicense_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_DriverLicense_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_DriverLicense_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="DutyForm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DutyForm : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DutyForm.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static DutyForm CreateDutyForm(global::System.Int32 id, global::System.String name)
        {
            DutyForm dutyForm = new DutyForm();
            dutyForm.ID = id;
            dutyForm.Name = name;
            return dutyForm;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PermissionForm_ID
        {
            get
            {
                return _PermissionForm_ID;
            }
            set
            {
                OnPermissionForm_IDChanging(value);
                ReportPropertyChanging("PermissionForm_ID");
                _PermissionForm_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionForm_ID");
                OnPermissionForm_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _PermissionForm_ID;
        partial void OnPermissionForm_IDChanging(Nullable<global::System.Int32> value);
        partial void OnPermissionForm_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TDT
        {
            get
            {
                return _TDT;
            }
            set
            {
                OnTDTChanging(value);
                ReportPropertyChanging("TDT");
                _TDT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TDT");
                OnTDTChanged();
            }
        }
        private global::System.String _TDT;
        partial void OnTDTChanging(global::System.String value);
        partial void OnTDTChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_DutyForm_PermissionForm", "PermissionForm")]
        public PermissionForm PermissionForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionForm>("BrandNewModel.FK_DutyForm_PermissionForm", "PermissionForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionForm>("BrandNewModel.FK_DutyForm_PermissionForm", "PermissionForm").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PermissionForm> PermissionFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionForm>("BrandNewModel.FK_DutyForm_PermissionForm", "PermissionForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PermissionForm>("BrandNewModel.FK_DutyForm_PermissionForm", "PermissionForm", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_DutyForm", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_DutyForm", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_DutyForm", "Recruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_SquadDuty_DutyForm", "SquadDuty")]
        public EntityCollection<SquadDuty> SquadDuty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SquadDuty>("BrandNewModel.FK_SquadDuty_DutyForm", "SquadDuty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SquadDuty>("BrandNewModel.FK_SquadDuty_DutyForm", "SquadDuty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Echelon")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Echelon : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Echelon.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        public static Echelon CreateEchelon(global::System.Int32 id, global::System.String number)
        {
            Echelon echelon = new Echelon();
            echelon.ID = id;
            echelon.Number = number;
            return echelon;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_Echelon", "Squad")]
        public EntityCollection<Squad> Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squad>("BrandNewModel.FK_Squad_Echelon", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squad>("BrandNewModel.FK_Squad_Echelon", "Squad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Education")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Education : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Education.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Education CreateEducation(global::System.Int32 id, global::System.String name)
        {
            Education education = new Education();
            education.ID = id;
            education.Name = name;
            return education;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Education", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Education", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Education", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="FamilyStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FamilyStatus : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта FamilyStatus.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static FamilyStatus CreateFamilyStatus(global::System.Int32 id, global::System.String name)
        {
            FamilyStatus familyStatus = new FamilyStatus();
            familyStatus.ID = id;
            familyStatus.Name = name;
            return familyStatus;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_FamilyStatus", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_FamilyStatus", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_FamilyStatus", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MarriageStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarriageStatus : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MarriageStatus.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static MarriageStatus CreateMarriageStatus(global::System.Int32 id, global::System.String name)
        {
            MarriageStatus marriageStatus = new MarriageStatus();
            marriageStatus.ID = id;
            marriageStatus.Name = name;
            return marriageStatus;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_MarriageStatus", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_MarriageStatus", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_MarriageStatus", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MedicineCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineCategory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MedicineCategory.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static MedicineCategory CreateMedicineCategory(global::System.Int32 id, global::System.String name)
        {
            MedicineCategory medicineCategory = new MedicineCategory();
            medicineCategory.ID = id;
            medicineCategory.Name = name;
            return medicineCategory;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_MedicineCategory", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_MedicineCategory", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_MedicineCategory", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MedicineDegree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicineDegree : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MedicineDegree.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static MedicineDegree CreateMedicineDegree(global::System.Int32 id, global::System.String name)
        {
            MedicineDegree medicineDegree = new MedicineDegree();
            medicineDegree.ID = id;
            medicineDegree.Name = name;
            return medicineDegree;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_MedicineDegree", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_MedicineDegree", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_MedicineDegree", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MilitaryCertificate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MilitaryCertificate : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MilitaryCertificate.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="post">Исходное значение свойства Post.</param>
        /// <param name="serial">Исходное значение свойства Serial.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="isMarine">Исходное значение свойства IsMarine.</param>
        /// <param name="obtainDepartment">Исходное значение свойства ObtainDepartment.</param>
        /// <param name="obtainDate">Исходное значение свойства ObtainDate.</param>
        /// <param name="militaryTitle_ID">Исходное значение свойства MilitaryTitle_ID.</param>
        /// <param name="deputy_ID">Исходное значение свойства Deputy_ID.</param>
        public static MilitaryCertificate CreateMilitaryCertificate(global::System.Int32 id, global::System.String post, global::System.String serial, global::System.String number, global::System.Boolean isMarine, global::System.String obtainDepartment, global::System.DateTime obtainDate, global::System.Int32 militaryTitle_ID, global::System.Int32 deputy_ID)
        {
            MilitaryCertificate militaryCertificate = new MilitaryCertificate();
            militaryCertificate.ID = id;
            militaryCertificate.Post = post;
            militaryCertificate.Serial = serial;
            militaryCertificate.Number = number;
            militaryCertificate.IsMarine = isMarine;
            militaryCertificate.ObtainDepartment = obtainDepartment;
            militaryCertificate.ObtainDate = obtainDate;
            militaryCertificate.MilitaryTitle_ID = militaryTitle_ID;
            militaryCertificate.Deputy_ID = deputy_ID;
            return militaryCertificate;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial
        {
            get
            {
                return _Serial;
            }
            set
            {
                OnSerialChanging(value);
                ReportPropertyChanging("Serial");
                _Serial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial");
                OnSerialChanged();
            }
        }
        private global::System.String _Serial;
        partial void OnSerialChanging(global::System.String value);
        partial void OnSerialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMarine
        {
            get
            {
                return _IsMarine;
            }
            set
            {
                OnIsMarineChanging(value);
                ReportPropertyChanging("IsMarine");
                _IsMarine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMarine");
                OnIsMarineChanged();
            }
        }
        private global::System.Boolean _IsMarine;
        partial void OnIsMarineChanging(global::System.Boolean value);
        partial void OnIsMarineChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObtainDepartment
        {
            get
            {
                return _ObtainDepartment;
            }
            set
            {
                OnObtainDepartmentChanging(value);
                ReportPropertyChanging("ObtainDepartment");
                _ObtainDepartment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObtainDepartment");
                OnObtainDepartmentChanged();
            }
        }
        private global::System.String _ObtainDepartment;
        partial void OnObtainDepartmentChanging(global::System.String value);
        partial void OnObtainDepartmentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ObtainDate
        {
            get
            {
                return _ObtainDate;
            }
            set
            {
                OnObtainDateChanging(value);
                ReportPropertyChanging("ObtainDate");
                _ObtainDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObtainDate");
                OnObtainDateChanged();
            }
        }
        private global::System.DateTime _ObtainDate;
        partial void OnObtainDateChanging(global::System.DateTime value);
        partial void OnObtainDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MilitaryTitle_ID
        {
            get
            {
                return _MilitaryTitle_ID;
            }
            set
            {
                OnMilitaryTitle_IDChanging(value);
                ReportPropertyChanging("MilitaryTitle_ID");
                _MilitaryTitle_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MilitaryTitle_ID");
                OnMilitaryTitle_IDChanged();
            }
        }
        private global::System.Int32 _MilitaryTitle_ID;
        partial void OnMilitaryTitle_IDChanging(global::System.Int32 value);
        partial void OnMilitaryTitle_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Deputy_ID
        {
            get
            {
                return _Deputy_ID;
            }
            set
            {
                OnDeputy_IDChanging(value);
                ReportPropertyChanging("Deputy_ID");
                _Deputy_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deputy_ID");
                OnDeputy_IDChanged();
            }
        }
        private global::System.Int32 _Deputy_ID;
        partial void OnDeputy_IDChanging(global::System.Int32 value);
        partial void OnDeputy_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryCertificate_Deputy", "Deputy")]
        public Deputy Deputy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deputy>("BrandNewModel.FK_MilitaryCertificate_Deputy", "Deputy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deputy>("BrandNewModel.FK_MilitaryCertificate_Deputy", "Deputy").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deputy> DeputyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deputy>("BrandNewModel.FK_MilitaryCertificate_Deputy", "Deputy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deputy>("BrandNewModel.FK_MilitaryCertificate_Deputy", "Deputy", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryCertificate_MilitaryTitle", "MilitaryTitle")]
        public MilitaryTitle MilitaryTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryTitle>("BrandNewModel.FK_MilitaryCertificate_MilitaryTitle", "MilitaryTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryTitle>("BrandNewModel.FK_MilitaryCertificate_MilitaryTitle", "MilitaryTitle").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MilitaryTitle> MilitaryTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryTitle>("BrandNewModel.FK_MilitaryCertificate_MilitaryTitle", "MilitaryTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MilitaryTitle>("BrandNewModel.FK_MilitaryCertificate_MilitaryTitle", "MilitaryTitle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MilitaryDistrict")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MilitaryDistrict : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MilitaryDistrict.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static MilitaryDistrict CreateMilitaryDistrict(global::System.Int32 id, global::System.String name)
        {
            MilitaryDistrict militaryDistrict = new MilitaryDistrict();
            militaryDistrict.ID = id;
            militaryDistrict.Name = name;
            return militaryDistrict;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Station_MilitaryDistrict", "Station")]
        public EntityCollection<Station> Station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Station>("BrandNewModel.FK_Station_MilitaryDistrict", "Station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Station>("BrandNewModel.FK_Station_MilitaryDistrict", "Station", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MilitaryForces")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MilitaryForces : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MilitaryForces.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static MilitaryForces CreateMilitaryForces(global::System.Int32 id, global::System.String name)
        {
            MilitaryForces militaryForces = new MilitaryForces();
            militaryForces.ID = id;
            militaryForces.Name = name;
            return militaryForces;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryUnit_MilitaryForces", "MilitaryUnit")]
        public EntityCollection<MilitaryUnit> MilitaryUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MilitaryUnit>("BrandNewModel.FK_MilitaryUnit_MilitaryForces", "MilitaryUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MilitaryUnit>("BrandNewModel.FK_MilitaryUnit_MilitaryForces", "MilitaryUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MilitaryTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MilitaryTitle : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MilitaryTitle.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="rank">Исходное значение свойства Rank.</param>
        /// <param name="land">Исходное значение свойства Land.</param>
        /// <param name="marine">Исходное значение свойства Marine.</param>
        public static MilitaryTitle CreateMilitaryTitle(global::System.Int32 id, global::System.Int32 rank, global::System.String land, global::System.String marine)
        {
            MilitaryTitle militaryTitle = new MilitaryTitle();
            militaryTitle.ID = id;
            militaryTitle.Rank = rank;
            militaryTitle.Land = land;
            militaryTitle.Marine = marine;
            return militaryTitle;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.Int32 _Rank;
        partial void OnRankChanging(global::System.Int32 value);
        partial void OnRankChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Land
        {
            get
            {
                return _Land;
            }
            set
            {
                OnLandChanging(value);
                ReportPropertyChanging("Land");
                _Land = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Land");
                OnLandChanged();
            }
        }
        private global::System.String _Land;
        partial void OnLandChanging(global::System.String value);
        partial void OnLandChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Marine
        {
            get
            {
                return _Marine;
            }
            set
            {
                OnMarineChanging(value);
                ReportPropertyChanging("Marine");
                _Marine = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Marine");
                OnMarineChanged();
            }
        }
        private global::System.String _Marine;
        partial void OnMarineChanging(global::System.String value);
        partial void OnMarineChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryCertificate_MilitaryTitle", "MilitaryCertificate")]
        public EntityCollection<MilitaryCertificate> MilitaryCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MilitaryCertificate>("BrandNewModel.FK_MilitaryCertificate_MilitaryTitle", "MilitaryCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MilitaryCertificate>("BrandNewModel.FK_MilitaryCertificate_MilitaryTitle", "MilitaryCertificate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="MilitaryUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MilitaryUnit : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта MilitaryUnit.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="zIP">Исходное значение свойства ZIP.</param>
        /// <param name="address">Исходное значение свойства Address.</param>
        /// <param name="militaryForces_ID">Исходное значение свойства MilitaryForces_ID.</param>
        /// <param name="station_ID">Исходное значение свойства Station_ID.</param>
        public static MilitaryUnit CreateMilitaryUnit(global::System.Int32 id, global::System.String name, global::System.String zIP, global::System.String address, global::System.Int32 militaryForces_ID, global::System.Int32 station_ID)
        {
            MilitaryUnit militaryUnit = new MilitaryUnit();
            militaryUnit.ID = id;
            militaryUnit.Name = name;
            militaryUnit.ZIP = zIP;
            militaryUnit.Address = address;
            militaryUnit.MilitaryForces_ID = militaryForces_ID;
            militaryUnit.Station_ID = station_ID;
            return militaryUnit;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZIP
        {
            get
            {
                return _ZIP;
            }
            set
            {
                OnZIPChanging(value);
                ReportPropertyChanging("ZIP");
                _ZIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZIP");
                OnZIPChanged();
            }
        }
        private global::System.String _ZIP;
        partial void OnZIPChanging(global::System.String value);
        partial void OnZIPChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MilitaryForces_ID
        {
            get
            {
                return _MilitaryForces_ID;
            }
            set
            {
                OnMilitaryForces_IDChanging(value);
                ReportPropertyChanging("MilitaryForces_ID");
                _MilitaryForces_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MilitaryForces_ID");
                OnMilitaryForces_IDChanged();
            }
        }
        private global::System.Int32 _MilitaryForces_ID;
        partial void OnMilitaryForces_IDChanging(global::System.Int32 value);
        partial void OnMilitaryForces_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Station_ID
        {
            get
            {
                return _Station_ID;
            }
            set
            {
                OnStation_IDChanging(value);
                ReportPropertyChanging("Station_ID");
                _Station_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Station_ID");
                OnStation_IDChanged();
            }
        }
        private global::System.Int32 _Station_ID;
        partial void OnStation_IDChanging(global::System.Int32 value);
        partial void OnStation_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryUnit_MilitaryForces", "MilitaryForces")]
        public MilitaryForces MilitaryForces
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryForces>("BrandNewModel.FK_MilitaryUnit_MilitaryForces", "MilitaryForces").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryForces>("BrandNewModel.FK_MilitaryUnit_MilitaryForces", "MilitaryForces").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MilitaryForces> MilitaryForcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryForces>("BrandNewModel.FK_MilitaryUnit_MilitaryForces", "MilitaryForces");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MilitaryForces>("BrandNewModel.FK_MilitaryUnit_MilitaryForces", "MilitaryForces", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryUnit_Station", "Station")]
        public Station Station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("BrandNewModel.FK_MilitaryUnit_Station", "Station").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("BrandNewModel.FK_MilitaryUnit_Station", "Station").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Station> StationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Station>("BrandNewModel.FK_MilitaryUnit_Station", "Station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Station>("BrandNewModel.FK_MilitaryUnit_Station", "Station", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Phone_MilitaryUnit", "Phone")]
        public EntityCollection<Phone> Phone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Phone>("BrandNewModel.FK_Phone_MilitaryUnit", "Phone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Phone>("BrandNewModel.FK_Phone_MilitaryUnit", "Phone", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squadron_MilitaryUnit", "Squadron")]
        public EntityCollection<Squadron> Squadron
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squadron>("BrandNewModel.FK_Squadron_MilitaryUnit", "Squadron");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squadron>("BrandNewModel.FK_Squadron_MilitaryUnit", "Squadron", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="NeuroPsychicStability")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NeuroPsychicStability : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта NeuroPsychicStability.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static NeuroPsychicStability CreateNeuroPsychicStability(global::System.Int32 id, global::System.String name)
        {
            NeuroPsychicStability neuroPsychicStability = new NeuroPsychicStability();
            neuroPsychicStability.ID = id;
            neuroPsychicStability.Name = name;
            return neuroPsychicStability;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_NeuroPsychicStability", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_NeuroPsychicStability", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_NeuroPsychicStability", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="OrderSoldier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderSoldier : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OrderSoldier.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        public static OrderSoldier CreateOrderSoldier(global::System.Int32 id, global::System.String number, global::System.DateTime date)
        {
            OrderSoldier orderSoldier = new OrderSoldier();
            orderSoldier.ID = id;
            orderSoldier.Number = number;
            orderSoldier.Date = date;
            return orderSoldier;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_OrderSoldier", "Squad")]
        public EntityCollection<Squad> Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squad>("BrandNewModel.FK_Squad_OrderSoldier", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squad>("BrandNewModel.FK_Squad_OrderSoldier", "Squad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Permission.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="permissionForm_ID">Исходное значение свойства PermissionForm_ID.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        public static Permission CreatePermission(global::System.Int32 id, global::System.String number, global::System.DateTime date, global::System.Int32 permissionForm_ID, global::System.Int32 recruit_ID)
        {
            Permission permission = new Permission();
            permission.ID = id;
            permission.Number = number;
            permission.Date = date;
            permission.PermissionForm_ID = permissionForm_ID;
            permission.Recruit_ID = recruit_ID;
            return permission;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionForm_ID
        {
            get
            {
                return _PermissionForm_ID;
            }
            set
            {
                OnPermissionForm_IDChanging(value);
                ReportPropertyChanging("PermissionForm_ID");
                _PermissionForm_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermissionForm_ID");
                OnPermissionForm_IDChanged();
            }
        }
        private global::System.Int32 _PermissionForm_ID;
        partial void OnPermissionForm_IDChanging(global::System.Int32 value);
        partial void OnPermissionForm_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Permission_PermissionForm", "PermissionForm")]
        public PermissionForm PermissionForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionForm>("BrandNewModel.FK_Permission_PermissionForm", "PermissionForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionForm>("BrandNewModel.FK_Permission_PermissionForm", "PermissionForm").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PermissionForm> PermissionFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionForm>("BrandNewModel.FK_Permission_PermissionForm", "PermissionForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PermissionForm>("BrandNewModel.FK_Permission_PermissionForm", "PermissionForm", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Permission_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Permission_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Permission_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Permission_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_Permission_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="PermissionForm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionForm : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта PermissionForm.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static PermissionForm CreatePermissionForm(global::System.Int32 id, global::System.String name)
        {
            PermissionForm permissionForm = new PermissionForm();
            permissionForm.ID = id;
            permissionForm.Name = name;
            return permissionForm;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_DutyForm_PermissionForm", "DutyForm")]
        public EntityCollection<DutyForm> DutyForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DutyForm>("BrandNewModel.FK_DutyForm_PermissionForm", "DutyForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DutyForm>("BrandNewModel.FK_DutyForm_PermissionForm", "DutyForm", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Permission_PermissionForm", "Permission")]
        public EntityCollection<Permission> Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BrandNewModel.FK_Permission_PermissionForm", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BrandNewModel.FK_Permission_PermissionForm", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Phone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Phone : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Phone.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="militaryUnit_ID">Исходное значение свойства MilitaryUnit_ID.</param>
        public static Phone CreatePhone(global::System.Int32 id, global::System.String number, global::System.Int32 militaryUnit_ID)
        {
            Phone phone = new Phone();
            phone.ID = id;
            phone.Number = number;
            phone.MilitaryUnit_ID = militaryUnit_ID;
            return phone;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Addressee
        {
            get
            {
                return _Addressee;
            }
            set
            {
                OnAddresseeChanging(value);
                ReportPropertyChanging("Addressee");
                _Addressee = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Addressee");
                OnAddresseeChanged();
            }
        }
        private global::System.String _Addressee;
        partial void OnAddresseeChanging(global::System.String value);
        partial void OnAddresseeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MilitaryUnit_ID
        {
            get
            {
                return _MilitaryUnit_ID;
            }
            set
            {
                OnMilitaryUnit_IDChanging(value);
                ReportPropertyChanging("MilitaryUnit_ID");
                _MilitaryUnit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MilitaryUnit_ID");
                OnMilitaryUnit_IDChanged();
            }
        }
        private global::System.Int32 _MilitaryUnit_ID;
        partial void OnMilitaryUnit_IDChanging(global::System.Int32 value);
        partial void OnMilitaryUnit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Phone_MilitaryUnit", "MilitaryUnit")]
        public MilitaryUnit MilitaryUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryUnit>("BrandNewModel.FK_Phone_MilitaryUnit", "MilitaryUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryUnit>("BrandNewModel.FK_Phone_MilitaryUnit", "MilitaryUnit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MilitaryUnit> MilitaryUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryUnit>("BrandNewModel.FK_Phone_MilitaryUnit", "MilitaryUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MilitaryUnit>("BrandNewModel.FK_Phone_MilitaryUnit", "MilitaryUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Railroad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Railroad : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Railroad.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Railroad CreateRailroad(global::System.Int32 id, global::System.String name)
        {
            Railroad railroad = new Railroad();
            railroad.ID = id;
            railroad.Name = name;
            return railroad;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Station_Railroad", "Station")]
        public EntityCollection<Station> Station
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Station>("BrandNewModel.FK_Station_Railroad", "Station");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Station>("BrandNewModel.FK_Station_Railroad", "Station", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Recruit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recruit : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Recruit.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="isDataChecked">Исходное значение свойства IsDataChecked.</param>
        /// <param name="arrivalDate">Исходное значение свойства ArrivalDate.</param>
        /// <param name="birthPlace">Исходное значение свойства BirthPlace.</param>
        /// <param name="birthDate">Исходное значение свойства BirthDate.</param>
        /// <param name="passportSerial">Исходное значение свойства PassportSerial.</param>
        /// <param name="passportNumber">Исходное значение свойства PassportNumber.</param>
        /// <param name="passportObtainDept">Исходное значение свойства PassportObtainDept.</param>
        /// <param name="passportObtainOUFMS">Исходное значение свойства PassportObtainOUFMS.</param>
        /// <param name="passportObtainDate">Исходное значение свойства PassportObtainDate.</param>
        /// <param name="marriageStatus_ID">Исходное значение свойства MarriageStatus_ID.</param>
        /// <param name="haveChildren">Исходное значение свойства HaveChildren.</param>
        /// <param name="medicineCategory_ID">Исходное значение свойства MedicineCategory_ID.</param>
        /// <param name="medicineDegree_ID">Исходное значение свойства MedicineDegree_ID.</param>
        /// <param name="medicineVisionR">Исходное значение свойства MedicineVisionR.</param>
        /// <param name="medicineVisionL">Исходное значение свойства MedicineVisionL.</param>
        /// <param name="medicineVision">Исходное значение свойства MedicineVision.</param>
        /// <param name="medicineHeight">Исходное значение свойства MedicineHeight.</param>
        /// <param name="medicineWeight">Исходное значение свойства MedicineWeight.</param>
        /// <param name="medicineSizeHead">Исходное значение свойства MedicineSizeHead.</param>
        /// <param name="medicineSizeHeight">Исходное значение свойства MedicineSizeHeight.</param>
        /// <param name="medicineSizeVolume">Исходное значение свойства MedicineSizeVolume.</param>
        /// <param name="medicineSizeFeet">Исходное значение свойства MedicineSizeFeet.</param>
        /// <param name="tDT_ID">Исходное значение свойства TDT_ID.</param>
        /// <param name="militaryCardSerial">Исходное значение свойства MilitaryCardSerial.</param>
        /// <param name="militaryCardNumber">Исходное значение свойства MilitaryCardNumber.</param>
        /// <param name="competency_ID">Исходное значение свойства Competency_ID.</param>
        /// <param name="neuroPsychicStability_ID">Исходное значение свойства NeuroPsychicStability_ID.</param>
        /// <param name="isMarine">Исходное значение свойства IsMarine.</param>
        /// <param name="conviction">Исходное значение свойства Conviction.</param>
        /// <param name="activity_ID">Исходное значение свойства Activity_ID.</param>
        /// <param name="education_ID">Исходное значение свойства Education_ID.</param>
        /// <param name="speciality_ID">Исходное значение свойства Speciality_ID.</param>
        /// <param name="badRegistry_ID">Исходное значение свойства BadRegistry_ID.</param>
        /// <param name="familyStatus_ID">Исходное значение свойства FamilyStatus_ID.</param>
        /// <param name="dutyForm_ID">Исходное значение свойства DutyForm_ID.</param>
        /// <param name="squad_ID">Исходное значение свойства Squad_ID.</param>
        /// <param name="department_ID">Исходное значение свойства Department_ID.</param>
        public static Recruit CreateRecruit(global::System.Int32 id, global::System.String lastName, global::System.String firstName, global::System.Boolean isDataChecked, global::System.DateTime arrivalDate, global::System.String birthPlace, global::System.DateTime birthDate, global::System.String passportSerial, global::System.String passportNumber, global::System.String passportObtainDept, global::System.String passportObtainOUFMS, global::System.DateTime passportObtainDate, global::System.Int32 marriageStatus_ID, global::System.Boolean haveChildren, global::System.Int32 medicineCategory_ID, global::System.Int32 medicineDegree_ID, global::System.Double medicineVisionR, global::System.Double medicineVisionL, global::System.String medicineVision, global::System.Int32 medicineHeight, global::System.Int32 medicineWeight, global::System.Int32 medicineSizeHead, global::System.Int32 medicineSizeHeight, global::System.Int32 medicineSizeVolume, global::System.Int32 medicineSizeFeet, global::System.Int32 tDT_ID, global::System.String militaryCardSerial, global::System.String militaryCardNumber, global::System.Int32 competency_ID, global::System.Int32 neuroPsychicStability_ID, global::System.Boolean isMarine, global::System.Boolean conviction, global::System.Int32 activity_ID, global::System.Int32 education_ID, global::System.Int32 speciality_ID, global::System.Int32 badRegistry_ID, global::System.Int32 familyStatus_ID, global::System.Int32 dutyForm_ID, global::System.Int32 squad_ID, global::System.Int32 department_ID)
        {
            Recruit recruit = new Recruit();
            recruit.ID = id;
            recruit.LastName = lastName;
            recruit.FirstName = firstName;
            recruit.IsDataChecked = isDataChecked;
            recruit.ArrivalDate = arrivalDate;
            recruit.BirthPlace = birthPlace;
            recruit.BirthDate = birthDate;
            recruit.PassportSerial = passportSerial;
            recruit.PassportNumber = passportNumber;
            recruit.PassportObtainDept = passportObtainDept;
            recruit.PassportObtainOUFMS = passportObtainOUFMS;
            recruit.PassportObtainDate = passportObtainDate;
            recruit.MarriageStatus_ID = marriageStatus_ID;
            recruit.HaveChildren = haveChildren;
            recruit.MedicineCategory_ID = medicineCategory_ID;
            recruit.MedicineDegree_ID = medicineDegree_ID;
            recruit.MedicineVisionR = medicineVisionR;
            recruit.MedicineVisionL = medicineVisionL;
            recruit.MedicineVision = medicineVision;
            recruit.MedicineHeight = medicineHeight;
            recruit.MedicineWeight = medicineWeight;
            recruit.MedicineSizeHead = medicineSizeHead;
            recruit.MedicineSizeHeight = medicineSizeHeight;
            recruit.MedicineSizeVolume = medicineSizeVolume;
            recruit.MedicineSizeFeet = medicineSizeFeet;
            recruit.TDT_ID = tDT_ID;
            recruit.MilitaryCardSerial = militaryCardSerial;
            recruit.MilitaryCardNumber = militaryCardNumber;
            recruit.Competency_ID = competency_ID;
            recruit.NeuroPsychicStability_ID = neuroPsychicStability_ID;
            recruit.IsMarine = isMarine;
            recruit.Conviction = conviction;
            recruit.Activity_ID = activity_ID;
            recruit.Education_ID = education_ID;
            recruit.Speciality_ID = speciality_ID;
            recruit.BadRegistry_ID = badRegistry_ID;
            recruit.FamilyStatus_ID = familyStatus_ID;
            recruit.DutyForm_ID = dutyForm_ID;
            recruit.Squad_ID = squad_ID;
            recruit.Department_ID = department_ID;
            return recruit;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDataChecked
        {
            get
            {
                return _IsDataChecked;
            }
            set
            {
                OnIsDataCheckedChanging(value);
                ReportPropertyChanging("IsDataChecked");
                _IsDataChecked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDataChecked");
                OnIsDataCheckedChanged();
            }
        }
        private global::System.Boolean _IsDataChecked;
        partial void OnIsDataCheckedChanging(global::System.Boolean value);
        partial void OnIsDataCheckedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ArrivalDate
        {
            get
            {
                return _ArrivalDate;
            }
            set
            {
                OnArrivalDateChanging(value);
                ReportPropertyChanging("ArrivalDate");
                _ArrivalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArrivalDate");
                OnArrivalDateChanged();
            }
        }
        private global::System.DateTime _ArrivalDate;
        partial void OnArrivalDateChanging(global::System.DateTime value);
        partial void OnArrivalDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DepartureDate
        {
            get
            {
                return _DepartureDate;
            }
            set
            {
                OnDepartureDateChanging(value);
                ReportPropertyChanging("DepartureDate");
                _DepartureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartureDate");
                OnDepartureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DepartureDate;
        partial void OnDepartureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDepartureDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportSerial
        {
            get
            {
                return _PassportSerial;
            }
            set
            {
                OnPassportSerialChanging(value);
                ReportPropertyChanging("PassportSerial");
                _PassportSerial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportSerial");
                OnPassportSerialChanged();
            }
        }
        private global::System.String _PassportSerial;
        partial void OnPassportSerialChanging(global::System.String value);
        partial void OnPassportSerialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportNumber
        {
            get
            {
                return _PassportNumber;
            }
            set
            {
                OnPassportNumberChanging(value);
                ReportPropertyChanging("PassportNumber");
                _PassportNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportNumber");
                OnPassportNumberChanged();
            }
        }
        private global::System.String _PassportNumber;
        partial void OnPassportNumberChanging(global::System.String value);
        partial void OnPassportNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportObtainDept
        {
            get
            {
                return _PassportObtainDept;
            }
            set
            {
                OnPassportObtainDeptChanging(value);
                ReportPropertyChanging("PassportObtainDept");
                _PassportObtainDept = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportObtainDept");
                OnPassportObtainDeptChanged();
            }
        }
        private global::System.String _PassportObtainDept;
        partial void OnPassportObtainDeptChanging(global::System.String value);
        partial void OnPassportObtainDeptChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassportObtainOUFMS
        {
            get
            {
                return _PassportObtainOUFMS;
            }
            set
            {
                OnPassportObtainOUFMSChanging(value);
                ReportPropertyChanging("PassportObtainOUFMS");
                _PassportObtainOUFMS = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassportObtainOUFMS");
                OnPassportObtainOUFMSChanged();
            }
        }
        private global::System.String _PassportObtainOUFMS;
        partial void OnPassportObtainOUFMSChanging(global::System.String value);
        partial void OnPassportObtainOUFMSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PassportObtainDate
        {
            get
            {
                return _PassportObtainDate;
            }
            set
            {
                OnPassportObtainDateChanging(value);
                ReportPropertyChanging("PassportObtainDate");
                _PassportObtainDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PassportObtainDate");
                OnPassportObtainDateChanged();
            }
        }
        private global::System.DateTime _PassportObtainDate;
        partial void OnPassportObtainDateChanging(global::System.DateTime value);
        partial void OnPassportObtainDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarriageStatus_ID
        {
            get
            {
                return _MarriageStatus_ID;
            }
            set
            {
                OnMarriageStatus_IDChanging(value);
                ReportPropertyChanging("MarriageStatus_ID");
                _MarriageStatus_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarriageStatus_ID");
                OnMarriageStatus_IDChanged();
            }
        }
        private global::System.Int32 _MarriageStatus_ID;
        partial void OnMarriageStatus_IDChanging(global::System.Int32 value);
        partial void OnMarriageStatus_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HaveChildren
        {
            get
            {
                return _HaveChildren;
            }
            set
            {
                OnHaveChildrenChanging(value);
                ReportPropertyChanging("HaveChildren");
                _HaveChildren = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HaveChildren");
                OnHaveChildrenChanged();
            }
        }
        private global::System.Boolean _HaveChildren;
        partial void OnHaveChildrenChanging(global::System.Boolean value);
        partial void OnHaveChildrenChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineCategory_ID
        {
            get
            {
                return _MedicineCategory_ID;
            }
            set
            {
                OnMedicineCategory_IDChanging(value);
                ReportPropertyChanging("MedicineCategory_ID");
                _MedicineCategory_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineCategory_ID");
                OnMedicineCategory_IDChanged();
            }
        }
        private global::System.Int32 _MedicineCategory_ID;
        partial void OnMedicineCategory_IDChanging(global::System.Int32 value);
        partial void OnMedicineCategory_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineDegree_ID
        {
            get
            {
                return _MedicineDegree_ID;
            }
            set
            {
                OnMedicineDegree_IDChanging(value);
                ReportPropertyChanging("MedicineDegree_ID");
                _MedicineDegree_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineDegree_ID");
                OnMedicineDegree_IDChanged();
            }
        }
        private global::System.Int32 _MedicineDegree_ID;
        partial void OnMedicineDegree_IDChanging(global::System.Int32 value);
        partial void OnMedicineDegree_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedicineArticle
        {
            get
            {
                return _MedicineArticle;
            }
            set
            {
                OnMedicineArticleChanging(value);
                ReportPropertyChanging("MedicineArticle");
                _MedicineArticle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedicineArticle");
                OnMedicineArticleChanged();
            }
        }
        private global::System.String _MedicineArticle;
        partial void OnMedicineArticleChanging(global::System.String value);
        partial void OnMedicineArticleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MedicineVisionR
        {
            get
            {
                return _MedicineVisionR;
            }
            set
            {
                OnMedicineVisionRChanging(value);
                ReportPropertyChanging("MedicineVisionR");
                _MedicineVisionR = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineVisionR");
                OnMedicineVisionRChanged();
            }
        }
        private global::System.Double _MedicineVisionR;
        partial void OnMedicineVisionRChanging(global::System.Double value);
        partial void OnMedicineVisionRChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MedicineVisionL
        {
            get
            {
                return _MedicineVisionL;
            }
            set
            {
                OnMedicineVisionLChanging(value);
                ReportPropertyChanging("MedicineVisionL");
                _MedicineVisionL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineVisionL");
                OnMedicineVisionLChanged();
            }
        }
        private global::System.Double _MedicineVisionL;
        partial void OnMedicineVisionLChanging(global::System.Double value);
        partial void OnMedicineVisionLChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedicineVision
        {
            get
            {
                return _MedicineVision;
            }
            set
            {
                OnMedicineVisionChanging(value);
                ReportPropertyChanging("MedicineVision");
                _MedicineVision = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedicineVision");
                OnMedicineVisionChanged();
            }
        }
        private global::System.String _MedicineVision;
        partial void OnMedicineVisionChanging(global::System.String value);
        partial void OnMedicineVisionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineHeight
        {
            get
            {
                return _MedicineHeight;
            }
            set
            {
                OnMedicineHeightChanging(value);
                ReportPropertyChanging("MedicineHeight");
                _MedicineHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineHeight");
                OnMedicineHeightChanged();
            }
        }
        private global::System.Int32 _MedicineHeight;
        partial void OnMedicineHeightChanging(global::System.Int32 value);
        partial void OnMedicineHeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineWeight
        {
            get
            {
                return _MedicineWeight;
            }
            set
            {
                OnMedicineWeightChanging(value);
                ReportPropertyChanging("MedicineWeight");
                _MedicineWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineWeight");
                OnMedicineWeightChanged();
            }
        }
        private global::System.Int32 _MedicineWeight;
        partial void OnMedicineWeightChanging(global::System.Int32 value);
        partial void OnMedicineWeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineSizeHead
        {
            get
            {
                return _MedicineSizeHead;
            }
            set
            {
                OnMedicineSizeHeadChanging(value);
                ReportPropertyChanging("MedicineSizeHead");
                _MedicineSizeHead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineSizeHead");
                OnMedicineSizeHeadChanged();
            }
        }
        private global::System.Int32 _MedicineSizeHead;
        partial void OnMedicineSizeHeadChanging(global::System.Int32 value);
        partial void OnMedicineSizeHeadChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineSizeHeight
        {
            get
            {
                return _MedicineSizeHeight;
            }
            set
            {
                OnMedicineSizeHeightChanging(value);
                ReportPropertyChanging("MedicineSizeHeight");
                _MedicineSizeHeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineSizeHeight");
                OnMedicineSizeHeightChanged();
            }
        }
        private global::System.Int32 _MedicineSizeHeight;
        partial void OnMedicineSizeHeightChanging(global::System.Int32 value);
        partial void OnMedicineSizeHeightChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineSizeVolume
        {
            get
            {
                return _MedicineSizeVolume;
            }
            set
            {
                OnMedicineSizeVolumeChanging(value);
                ReportPropertyChanging("MedicineSizeVolume");
                _MedicineSizeVolume = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineSizeVolume");
                OnMedicineSizeVolumeChanged();
            }
        }
        private global::System.Int32 _MedicineSizeVolume;
        partial void OnMedicineSizeVolumeChanging(global::System.Int32 value);
        partial void OnMedicineSizeVolumeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MedicineSizeFeet
        {
            get
            {
                return _MedicineSizeFeet;
            }
            set
            {
                OnMedicineSizeFeetChanging(value);
                ReportPropertyChanging("MedicineSizeFeet");
                _MedicineSizeFeet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicineSizeFeet");
                OnMedicineSizeFeetChanged();
            }
        }
        private global::System.Int32 _MedicineSizeFeet;
        partial void OnMedicineSizeFeetChanging(global::System.Int32 value);
        partial void OnMedicineSizeFeetChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TDT_ID
        {
            get
            {
                return _TDT_ID;
            }
            set
            {
                OnTDT_IDChanging(value);
                ReportPropertyChanging("TDT_ID");
                _TDT_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TDT_ID");
                OnTDT_IDChanged();
            }
        }
        private global::System.Int32 _TDT_ID;
        partial void OnTDT_IDChanging(global::System.Int32 value);
        partial void OnTDT_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MilitaryCardSerial
        {
            get
            {
                return _MilitaryCardSerial;
            }
            set
            {
                OnMilitaryCardSerialChanging(value);
                ReportPropertyChanging("MilitaryCardSerial");
                _MilitaryCardSerial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MilitaryCardSerial");
                OnMilitaryCardSerialChanged();
            }
        }
        private global::System.String _MilitaryCardSerial;
        partial void OnMilitaryCardSerialChanging(global::System.String value);
        partial void OnMilitaryCardSerialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MilitaryCardNumber
        {
            get
            {
                return _MilitaryCardNumber;
            }
            set
            {
                OnMilitaryCardNumberChanging(value);
                ReportPropertyChanging("MilitaryCardNumber");
                _MilitaryCardNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MilitaryCardNumber");
                OnMilitaryCardNumberChanged();
            }
        }
        private global::System.String _MilitaryCardNumber;
        partial void OnMilitaryCardNumberChanging(global::System.String value);
        partial void OnMilitaryCardNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Competency_ID
        {
            get
            {
                return _Competency_ID;
            }
            set
            {
                OnCompetency_IDChanging(value);
                ReportPropertyChanging("Competency_ID");
                _Competency_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Competency_ID");
                OnCompetency_IDChanged();
            }
        }
        private global::System.Int32 _Competency_ID;
        partial void OnCompetency_IDChanging(global::System.Int32 value);
        partial void OnCompetency_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NeuroPsychicStability_ID
        {
            get
            {
                return _NeuroPsychicStability_ID;
            }
            set
            {
                OnNeuroPsychicStability_IDChanging(value);
                ReportPropertyChanging("NeuroPsychicStability_ID");
                _NeuroPsychicStability_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeuroPsychicStability_ID");
                OnNeuroPsychicStability_IDChanged();
            }
        }
        private global::System.Int32 _NeuroPsychicStability_ID;
        partial void OnNeuroPsychicStability_IDChanging(global::System.Int32 value);
        partial void OnNeuroPsychicStability_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMarine
        {
            get
            {
                return _IsMarine;
            }
            set
            {
                OnIsMarineChanging(value);
                ReportPropertyChanging("IsMarine");
                _IsMarine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMarine");
                OnIsMarineChanged();
            }
        }
        private global::System.Boolean _IsMarine;
        partial void OnIsMarineChanging(global::System.Boolean value);
        partial void OnIsMarineChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Conviction
        {
            get
            {
                return _Conviction;
            }
            set
            {
                OnConvictionChanging(value);
                ReportPropertyChanging("Conviction");
                _Conviction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Conviction");
                OnConvictionChanged();
            }
        }
        private global::System.Boolean _Conviction;
        partial void OnConvictionChanging(global::System.Boolean value);
        partial void OnConvictionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialityCivilian
        {
            get
            {
                return _SpecialityCivilian;
            }
            set
            {
                OnSpecialityCivilianChanging(value);
                ReportPropertyChanging("SpecialityCivilian");
                _SpecialityCivilian = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialityCivilian");
                OnSpecialityCivilianChanged();
            }
        }
        private global::System.String _SpecialityCivilian;
        partial void OnSpecialityCivilianChanging(global::System.String value);
        partial void OnSpecialityCivilianChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Activity_ID
        {
            get
            {
                return _Activity_ID;
            }
            set
            {
                OnActivity_IDChanging(value);
                ReportPropertyChanging("Activity_ID");
                _Activity_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Activity_ID");
                OnActivity_IDChanged();
            }
        }
        private global::System.Int32 _Activity_ID;
        partial void OnActivity_IDChanging(global::System.Int32 value);
        partial void OnActivity_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Education_ID
        {
            get
            {
                return _Education_ID;
            }
            set
            {
                OnEducation_IDChanging(value);
                ReportPropertyChanging("Education_ID");
                _Education_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Education_ID");
                OnEducation_IDChanged();
            }
        }
        private global::System.Int32 _Education_ID;
        partial void OnEducation_IDChanging(global::System.Int32 value);
        partial void OnEducation_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Speciality_ID
        {
            get
            {
                return _Speciality_ID;
            }
            set
            {
                OnSpeciality_IDChanging(value);
                ReportPropertyChanging("Speciality_ID");
                _Speciality_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Speciality_ID");
                OnSpeciality_IDChanged();
            }
        }
        private global::System.Int32 _Speciality_ID;
        partial void OnSpeciality_IDChanging(global::System.Int32 value);
        partial void OnSpeciality_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BadRegistry_ID
        {
            get
            {
                return _BadRegistry_ID;
            }
            set
            {
                OnBadRegistry_IDChanging(value);
                ReportPropertyChanging("BadRegistry_ID");
                _BadRegistry_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BadRegistry_ID");
                OnBadRegistry_IDChanged();
            }
        }
        private global::System.Int32 _BadRegistry_ID;
        partial void OnBadRegistry_IDChanging(global::System.Int32 value);
        partial void OnBadRegistry_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FamilyStatus_ID
        {
            get
            {
                return _FamilyStatus_ID;
            }
            set
            {
                OnFamilyStatus_IDChanging(value);
                ReportPropertyChanging("FamilyStatus_ID");
                _FamilyStatus_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FamilyStatus_ID");
                OnFamilyStatus_IDChanged();
            }
        }
        private global::System.Int32 _FamilyStatus_ID;
        partial void OnFamilyStatus_IDChanging(global::System.Int32 value);
        partial void OnFamilyStatus_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DutyForm_ID
        {
            get
            {
                return _DutyForm_ID;
            }
            set
            {
                OnDutyForm_IDChanging(value);
                ReportPropertyChanging("DutyForm_ID");
                _DutyForm_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DutyForm_ID");
                OnDutyForm_IDChanged();
            }
        }
        private global::System.Int32 _DutyForm_ID;
        partial void OnDutyForm_IDChanging(global::System.Int32 value);
        partial void OnDutyForm_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Squad_ID
        {
            get
            {
                return _Squad_ID;
            }
            set
            {
                OnSquad_IDChanging(value);
                ReportPropertyChanging("Squad_ID");
                _Squad_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Squad_ID");
                OnSquad_IDChanged();
            }
        }
        private global::System.Int32 _Squad_ID;
        partial void OnSquad_IDChanging(global::System.Int32 value);
        partial void OnSquad_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Department_ID
        {
            get
            {
                return _Department_ID;
            }
            set
            {
                OnDepartment_IDChanging(value);
                ReportPropertyChanging("Department_ID");
                _Department_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Department_ID");
                OnDepartment_IDChanged();
            }
        }
        private global::System.Int32 _Department_ID;
        partial void OnDepartment_IDChanging(global::System.Int32 value);
        partial void OnDepartment_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Activity", "Activity")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BrandNewModel.FK_Recruit_Activity", "Activity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BrandNewModel.FK_Recruit_Activity", "Activity").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("BrandNewModel.FK_Recruit_Activity", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("BrandNewModel.FK_Recruit_Activity", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_BadRegistry", "BadRegistry")]
        public BadRegistry BadRegistry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BadRegistry>("BrandNewModel.FK_Recruit_BadRegistry", "BadRegistry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BadRegistry>("BrandNewModel.FK_Recruit_BadRegistry", "BadRegistry").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BadRegistry> BadRegistryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BadRegistry>("BrandNewModel.FK_Recruit_BadRegistry", "BadRegistry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BadRegistry>("BrandNewModel.FK_Recruit_BadRegistry", "BadRegistry", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_ChosenRecruit_Recruit", "ChosenRecruit")]
        public EntityCollection<ChosenRecruit> ChosenRecruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChosenRecruit>("BrandNewModel.FK_ChosenRecruit_Recruit", "ChosenRecruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChosenRecruit>("BrandNewModel.FK_ChosenRecruit_Recruit", "ChosenRecruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Competency", "Competency")]
        public Competency Competency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competency>("BrandNewModel.FK_Recruit_Competency", "Competency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competency>("BrandNewModel.FK_Recruit_Competency", "Competency").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competency> CompetencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competency>("BrandNewModel.FK_Recruit_Competency", "Competency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competency>("BrandNewModel.FK_Recruit_Competency", "Competency", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Department", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BrandNewModel.FK_Recruit_Department", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BrandNewModel.FK_Recruit_Department", "Department").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("BrandNewModel.FK_Recruit_Department", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("BrandNewModel.FK_Recruit_Department", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Dismissal_Recruit", "Dismissal")]
        public EntityCollection<Dismissal> Dismissal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dismissal>("BrandNewModel.FK_Dismissal_Recruit", "Dismissal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dismissal>("BrandNewModel.FK_Dismissal_Recruit", "Dismissal", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_DriverLicense_Recruit", "DriverLicense")]
        public EntityCollection<DriverLicense> DriverLicense
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DriverLicense>("BrandNewModel.FK_DriverLicense_Recruit", "DriverLicense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DriverLicense>("BrandNewModel.FK_DriverLicense_Recruit", "DriverLicense", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_DutyForm", "DutyForm")]
        public DutyForm DutyForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DutyForm>("BrandNewModel.FK_Recruit_DutyForm", "DutyForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DutyForm>("BrandNewModel.FK_Recruit_DutyForm", "DutyForm").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DutyForm> DutyFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DutyForm>("BrandNewModel.FK_Recruit_DutyForm", "DutyForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DutyForm>("BrandNewModel.FK_Recruit_DutyForm", "DutyForm", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Education", "Education")]
        public Education Education
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Education>("BrandNewModel.FK_Recruit_Education", "Education").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Education>("BrandNewModel.FK_Recruit_Education", "Education").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Education> EducationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Education>("BrandNewModel.FK_Recruit_Education", "Education");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Education>("BrandNewModel.FK_Recruit_Education", "Education", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_FamilyStatus", "FamilyStatus")]
        public FamilyStatus FamilyStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FamilyStatus>("BrandNewModel.FK_Recruit_FamilyStatus", "FamilyStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FamilyStatus>("BrandNewModel.FK_Recruit_FamilyStatus", "FamilyStatus").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FamilyStatus> FamilyStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FamilyStatus>("BrandNewModel.FK_Recruit_FamilyStatus", "FamilyStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FamilyStatus>("BrandNewModel.FK_Recruit_FamilyStatus", "FamilyStatus", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_MarriageStatus", "MarriageStatus")]
        public MarriageStatus MarriageStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarriageStatus>("BrandNewModel.FK_Recruit_MarriageStatus", "MarriageStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarriageStatus>("BrandNewModel.FK_Recruit_MarriageStatus", "MarriageStatus").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MarriageStatus> MarriageStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MarriageStatus>("BrandNewModel.FK_Recruit_MarriageStatus", "MarriageStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MarriageStatus>("BrandNewModel.FK_Recruit_MarriageStatus", "MarriageStatus", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_MedicineCategory", "MedicineCategory")]
        public MedicineCategory MedicineCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineCategory>("BrandNewModel.FK_Recruit_MedicineCategory", "MedicineCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineCategory>("BrandNewModel.FK_Recruit_MedicineCategory", "MedicineCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicineCategory> MedicineCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineCategory>("BrandNewModel.FK_Recruit_MedicineCategory", "MedicineCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicineCategory>("BrandNewModel.FK_Recruit_MedicineCategory", "MedicineCategory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_MedicineDegree", "MedicineDegree")]
        public MedicineDegree MedicineDegree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineDegree>("BrandNewModel.FK_Recruit_MedicineDegree", "MedicineDegree").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineDegree>("BrandNewModel.FK_Recruit_MedicineDegree", "MedicineDegree").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicineDegree> MedicineDegreeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicineDegree>("BrandNewModel.FK_Recruit_MedicineDegree", "MedicineDegree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicineDegree>("BrandNewModel.FK_Recruit_MedicineDegree", "MedicineDegree", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_NeuroPsychicStability", "NeuroPsychicStability")]
        public NeuroPsychicStability NeuroPsychicStability
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeuroPsychicStability>("BrandNewModel.FK_Recruit_NeuroPsychicStability", "NeuroPsychicStability").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeuroPsychicStability>("BrandNewModel.FK_Recruit_NeuroPsychicStability", "NeuroPsychicStability").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NeuroPsychicStability> NeuroPsychicStabilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NeuroPsychicStability>("BrandNewModel.FK_Recruit_NeuroPsychicStability", "NeuroPsychicStability");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NeuroPsychicStability>("BrandNewModel.FK_Recruit_NeuroPsychicStability", "NeuroPsychicStability", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Permission_Recruit", "Permission")]
        public EntityCollection<Permission> Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BrandNewModel.FK_Permission_Recruit", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BrandNewModel.FK_Permission_Recruit", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Speciality", "Speciality")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("BrandNewModel.FK_Recruit_Speciality", "Speciality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("BrandNewModel.FK_Recruit_Speciality", "Speciality").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("BrandNewModel.FK_Recruit_Speciality", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("BrandNewModel.FK_Recruit_Speciality", "Speciality", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Squad", "Squad")]
        public Squad Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_Recruit_Squad", "Squad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_Recruit_Squad", "Squad").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Squad> SquadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_Recruit_Squad", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Squad>("BrandNewModel.FK_Recruit_Squad", "Squad", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_TDT", "TDT")]
        public TDT TDT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TDT>("BrandNewModel.FK_Recruit_TDT", "TDT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TDT>("BrandNewModel.FK_Recruit_TDT", "TDT").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TDT> TDTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TDT>("BrandNewModel.FK_Recruit_TDT", "TDT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TDT>("BrandNewModel.FK_Recruit_TDT", "TDT", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitsLog_Recruit", "RecruitsLog")]
        public EntityCollection<RecruitsLog> RecruitsLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecruitsLog>("BrandNewModel.FK_RecruitsLog_Recruit", "RecruitsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecruitsLog>("BrandNewModel.FK_RecruitsLog_Recruit", "RecruitsLog", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitSport_Recruit", "RecruitSport")]
        public EntityCollection<RecruitSport> RecruitSport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecruitSport>("BrandNewModel.FK_RecruitSport_Recruit", "RecruitSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecruitSport>("BrandNewModel.FK_RecruitSport_Recruit", "RecruitSport", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Relative_Recruit", "Relative")]
        public EntityCollection<Relative> Relative
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Relative>("BrandNewModel.FK_Relative_Recruit", "Relative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Relative>("BrandNewModel.FK_Relative_Recruit", "Relative", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Return_Recruit", "Return")]
        public EntityCollection<Return> Return
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Return>("BrandNewModel.FK_Return_Recruit", "Return");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Return>("BrandNewModel.FK_Return_Recruit", "Return", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_SelfDesiredAbsence_Recruit", "SelfDesiredAbsence")]
        public EntityCollection<SelfDesiredAbsence> SelfDesiredAbsence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SelfDesiredAbsence>("BrandNewModel.FK_SelfDesiredAbsence_Recruit", "SelfDesiredAbsence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SelfDesiredAbsence>("BrandNewModel.FK_SelfDesiredAbsence_Recruit", "SelfDesiredAbsence", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Token_Recruit", "Token")]
        public EntityCollection<Token> Token
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Token>("BrandNewModel.FK_Token_Recruit", "Token");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Token>("BrandNewModel.FK_Token_Recruit", "Token", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="RecruitsLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecruitsLog : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RecruitsLog.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        /// <param name="oldSquad_ID">Исходное значение свойства OldSquad_ID.</param>
        /// <param name="newSquad_ID">Исходное значение свойства NewSquad_ID.</param>
        /// <param name="changeDateTime">Исходное значение свойства ChangeDateTime.</param>
        public static RecruitsLog CreateRecruitsLog(global::System.Int32 id, global::System.Int32 recruit_ID, global::System.Int32 oldSquad_ID, global::System.Int32 newSquad_ID, global::System.DateTime changeDateTime)
        {
            RecruitsLog recruitsLog = new RecruitsLog();
            recruitsLog.ID = id;
            recruitsLog.Recruit_ID = recruit_ID;
            recruitsLog.OldSquad_ID = oldSquad_ID;
            recruitsLog.NewSquad_ID = newSquad_ID;
            recruitsLog.ChangeDateTime = changeDateTime;
            return recruitsLog;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldSquad_ID
        {
            get
            {
                return _OldSquad_ID;
            }
            set
            {
                OnOldSquad_IDChanging(value);
                ReportPropertyChanging("OldSquad_ID");
                _OldSquad_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldSquad_ID");
                OnOldSquad_IDChanged();
            }
        }
        private global::System.Int32 _OldSquad_ID;
        partial void OnOldSquad_IDChanging(global::System.Int32 value);
        partial void OnOldSquad_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewSquad_ID
        {
            get
            {
                return _NewSquad_ID;
            }
            set
            {
                OnNewSquad_IDChanging(value);
                ReportPropertyChanging("NewSquad_ID");
                _NewSquad_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewSquad_ID");
                OnNewSquad_IDChanged();
            }
        }
        private global::System.Int32 _NewSquad_ID;
        partial void OnNewSquad_IDChanging(global::System.Int32 value);
        partial void OnNewSquad_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangeDateTime
        {
            get
            {
                return _ChangeDateTime;
            }
            set
            {
                OnChangeDateTimeChanging(value);
                ReportPropertyChanging("ChangeDateTime");
                _ChangeDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDateTime");
                OnChangeDateTimeChanged();
            }
        }
        private global::System.DateTime _ChangeDateTime;
        partial void OnChangeDateTimeChanging(global::System.DateTime value);
        partial void OnChangeDateTimeChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitsLog_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_RecruitsLog_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_RecruitsLog_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_RecruitsLog_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_RecruitsLog_Recruit", "Recruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitsLog_NewSquad", "Squad")]
        public Squad Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_NewSquad", "Squad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_NewSquad", "Squad").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Squad> SquadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_NewSquad", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_NewSquad", "Squad", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitsLog_OldSquad", "Squad")]
        public Squad Squad1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_OldSquad", "Squad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_OldSquad", "Squad").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Squad> Squad1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_OldSquad", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Squad>("BrandNewModel.FK_RecruitsLog_OldSquad", "Squad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="RecruitSport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecruitSport : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RecruitSport.
        /// </summary>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        /// <param name="sportType_ID">Исходное значение свойства SportType_ID.</param>
        /// <param name="sportCategory_ID">Исходное значение свойства SportCategory_ID.</param>
        public static RecruitSport CreateRecruitSport(global::System.Int32 recruit_ID, global::System.Int32 sportType_ID, global::System.Int32 sportCategory_ID)
        {
            RecruitSport recruitSport = new RecruitSport();
            recruitSport.Recruit_ID = recruit_ID;
            recruitSport.SportType_ID = sportType_ID;
            recruitSport.SportCategory_ID = sportCategory_ID;
            return recruitSport;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                if (_Recruit_ID != value)
                {
                    OnRecruit_IDChanging(value);
                    ReportPropertyChanging("Recruit_ID");
                    _Recruit_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Recruit_ID");
                    OnRecruit_IDChanged();
                }
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportType_ID
        {
            get
            {
                return _SportType_ID;
            }
            set
            {
                if (_SportType_ID != value)
                {
                    OnSportType_IDChanging(value);
                    ReportPropertyChanging("SportType_ID");
                    _SportType_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportType_ID");
                    OnSportType_IDChanged();
                }
            }
        }
        private global::System.Int32 _SportType_ID;
        partial void OnSportType_IDChanging(global::System.Int32 value);
        partial void OnSportType_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SportCategory_ID
        {
            get
            {
                return _SportCategory_ID;
            }
            set
            {
                if (_SportCategory_ID != value)
                {
                    OnSportCategory_IDChanging(value);
                    ReportPropertyChanging("SportCategory_ID");
                    _SportCategory_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SportCategory_ID");
                    OnSportCategory_IDChanged();
                }
            }
        }
        private global::System.Int32 _SportCategory_ID;
        partial void OnSportCategory_IDChanging(global::System.Int32 value);
        partial void OnSportCategory_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitSport_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_RecruitSport_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_RecruitSport_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_RecruitSport_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_RecruitSport_Recruit", "Recruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitSport_SportCategory", "SportCategory")]
        public SportCategory SportCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportCategory>("BrandNewModel.FK_RecruitSport_SportCategory", "SportCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportCategory>("BrandNewModel.FK_RecruitSport_SportCategory", "SportCategory").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportCategory> SportCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportCategory>("BrandNewModel.FK_RecruitSport_SportCategory", "SportCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportCategory>("BrandNewModel.FK_RecruitSport_SportCategory", "SportCategory", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitSport_SportType", "SportType")]
        public SportType SportType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("BrandNewModel.FK_RecruitSport_SportType", "SportType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("BrandNewModel.FK_RecruitSport_SportType", "SportType").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SportType> SportTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SportType>("BrandNewModel.FK_RecruitSport_SportType", "SportType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SportType>("BrandNewModel.FK_RecruitSport_SportType", "SportType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Relative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Relative : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Relative.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        /// <param name="secondName">Исходное значение свойства SecondName.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="birthDate">Исходное значение свойства BirthDate.</param>
        /// <param name="birthPlace">Исходное значение свойства BirthPlace.</param>
        /// <param name="workPost">Исходное значение свойства WorkPost.</param>
        public static Relative CreateRelative(global::System.Int32 id, global::System.Int32 recruit_ID, global::System.String secondName, global::System.String firstName, global::System.DateTime birthDate, global::System.String birthPlace, global::System.String workPost)
        {
            Relative relative = new Relative();
            relative.ID = id;
            relative.Recruit_ID = recruit_ID;
            relative.SecondName = secondName;
            relative.FirstName = firstName;
            relative.BirthDate = birthDate;
            relative.BirthPlace = birthPlace;
            relative.WorkPost = workPost;
            return relative;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecondName
        {
            get
            {
                return _SecondName;
            }
            set
            {
                OnSecondNameChanging(value);
                ReportPropertyChanging("SecondName");
                _SecondName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecondName");
                OnSecondNameChanged();
            }
        }
        private global::System.String _SecondName;
        partial void OnSecondNameChanging(global::System.String value);
        partial void OnSecondNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private global::System.DateTime _BirthDate;
        partial void OnBirthDateChanging(global::System.DateTime value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthPlace
        {
            get
            {
                return _BirthPlace;
            }
            set
            {
                OnBirthPlaceChanging(value);
                ReportPropertyChanging("BirthPlace");
                _BirthPlace = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthPlace");
                OnBirthPlaceChanged();
            }
        }
        private global::System.String _BirthPlace;
        partial void OnBirthPlaceChanging(global::System.String value);
        partial void OnBirthPlaceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WorkPlace
        {
            get
            {
                return _WorkPlace;
            }
            set
            {
                OnWorkPlaceChanging(value);
                ReportPropertyChanging("WorkPlace");
                _WorkPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WorkPlace");
                OnWorkPlaceChanged();
            }
        }
        private global::System.String _WorkPlace;
        partial void OnWorkPlaceChanging(global::System.String value);
        partial void OnWorkPlaceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkPost
        {
            get
            {
                return _WorkPost;
            }
            set
            {
                OnWorkPostChanging(value);
                ReportPropertyChanging("WorkPost");
                _WorkPost = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkPost");
                OnWorkPostChanged();
            }
        }
        private global::System.String _WorkPost;
        partial void OnWorkPostChanging(global::System.String value);
        partial void OnWorkPostChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Relative_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Relative_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Relative_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Relative_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_Relative_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Return")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Return : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Return.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="returnDate">Исходное значение свойства ReturnDate.</param>
        /// <param name="isOfficialReturn">Исходное значение свойства IsOfficialReturn.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        public static Return CreateReturn(global::System.Int32 id, global::System.DateTime returnDate, global::System.Boolean isOfficialReturn, global::System.Int32 recruit_ID)
        {
            Return @return = new Return();
            @return.ID = id;
            @return.ReturnDate = returnDate;
            @return.IsOfficialReturn = isOfficialReturn;
            @return.Recruit_ID = recruit_ID;
            return @return;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReturnDate
        {
            get
            {
                return _ReturnDate;
            }
            set
            {
                OnReturnDateChanging(value);
                ReportPropertyChanging("ReturnDate");
                _ReturnDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnDate");
                OnReturnDateChanged();
            }
        }
        private global::System.DateTime _ReturnDate;
        partial void OnReturnDateChanging(global::System.DateTime value);
        partial void OnReturnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOfficialReturn
        {
            get
            {
                return _IsOfficialReturn;
            }
            set
            {
                OnIsOfficialReturnChanging(value);
                ReportPropertyChanging("IsOfficialReturn");
                _IsOfficialReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOfficialReturn");
                OnIsOfficialReturnChanged();
            }
        }
        private global::System.Boolean _IsOfficialReturn;
        partial void OnIsOfficialReturnChanging(global::System.Boolean value);
        partial void OnIsOfficialReturnChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Return_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Return_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Return_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Return_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_Return_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Season")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Season : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Season.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="year">Исходное значение свойства Year.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        public static Season CreateSeason(global::System.Int32 id, global::System.Int32 year, global::System.Int32 number)
        {
            Season season = new Season();
            season.ID = id;
            season.Year = year;
            season.Number = number;
            return season;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_ChosenRecruit_Season", "ChosenRecruit")]
        public EntityCollection<ChosenRecruit> ChosenRecruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChosenRecruit>("BrandNewModel.FK_ChosenRecruit_Season", "ChosenRecruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChosenRecruit>("BrandNewModel.FK_ChosenRecruit_Season", "ChosenRecruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Department_Season", "Department")]
        public EntityCollection<Department> Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("BrandNewModel.FK_Department_Season", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("BrandNewModel.FK_Department_Season", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squadron_Season", "Squadron")]
        public EntityCollection<Squadron> Squadron
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squadron>("BrandNewModel.FK_Squadron_Season", "Squadron");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squadron>("BrandNewModel.FK_Squadron_Season", "Squadron", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="SelfDesiredAbsence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SelfDesiredAbsence : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SelfDesiredAbsence.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="fromDateTime">Исходное значение свойства FromDateTime.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        public static SelfDesiredAbsence CreateSelfDesiredAbsence(global::System.Int32 id, global::System.DateTime fromDateTime, global::System.Int32 recruit_ID)
        {
            SelfDesiredAbsence selfDesiredAbsence = new SelfDesiredAbsence();
            selfDesiredAbsence.ID = id;
            selfDesiredAbsence.FromDateTime = fromDateTime;
            selfDesiredAbsence.Recruit_ID = recruit_ID;
            return selfDesiredAbsence;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDateTime
        {
            get
            {
                return _FromDateTime;
            }
            set
            {
                OnFromDateTimeChanging(value);
                ReportPropertyChanging("FromDateTime");
                _FromDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDateTime");
                OnFromDateTimeChanged();
            }
        }
        private global::System.DateTime _FromDateTime;
        partial void OnFromDateTimeChanging(global::System.DateTime value);
        partial void OnFromDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDateTime
        {
            get
            {
                return _ToDateTime;
            }
            set
            {
                OnToDateTimeChanging(value);
                ReportPropertyChanging("ToDateTime");
                _ToDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDateTime");
                OnToDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDateTime;
        partial void OnToDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_SelfDesiredAbsence_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_SelfDesiredAbsence_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_SelfDesiredAbsence_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_SelfDesiredAbsence_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_SelfDesiredAbsence_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Speciality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speciality : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Speciality.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Speciality CreateSpeciality(global::System.Int32 id, global::System.String name)
        {
            Speciality speciality = new Speciality();
            speciality.ID = id;
            speciality.Name = name;
            return speciality;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Speciality", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Speciality", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Speciality", "Recruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "SpecialitySquadDuty", "SquadDuty")]
        public EntityCollection<SquadDuty> SquadDuty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SquadDuty>("BrandNewModel.SpecialitySquadDuty", "SquadDuty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SquadDuty>("BrandNewModel.SpecialitySquadDuty", "SquadDuty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="SportCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportCategory : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SportCategory.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static SportCategory CreateSportCategory(global::System.Int32 id, global::System.String name)
        {
            SportCategory sportCategory = new SportCategory();
            sportCategory.ID = id;
            sportCategory.Name = name;
            return sportCategory;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitSport_SportCategory", "RecruitSport")]
        public EntityCollection<RecruitSport> RecruitSport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecruitSport>("BrandNewModel.FK_RecruitSport_SportCategory", "RecruitSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecruitSport>("BrandNewModel.FK_RecruitSport_SportCategory", "RecruitSport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="SportType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SportType : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SportType.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static SportType CreateSportType(global::System.Int32 id, global::System.String name)
        {
            SportType sportType = new SportType();
            sportType.ID = id;
            sportType.Name = name;
            return sportType;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitSport_SportType", "RecruitSport")]
        public EntityCollection<RecruitSport> RecruitSport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecruitSport>("BrandNewModel.FK_RecruitSport_SportType", "RecruitSport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecruitSport>("BrandNewModel.FK_RecruitSport_SportType", "RecruitSport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Squad")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Squad : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Squad.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="agentOfficers">Исходное значение свойства AgentOfficers.</param>
        /// <param name="agentSemiOfficers">Исходное значение свойства AgentSemiOfficers.</param>
        /// <param name="agentSoldiers">Исходное значение свойства AgentSoldiers.</param>
        /// <param name="task">Исходное значение свойства Task.</param>
        /// <param name="isDeparted">Исходное значение свойства IsDeparted.</param>
        /// <param name="isDressed">Исходное значение свойства IsDressed.</param>
        /// <param name="isDisplayed">Исходное значение свойства IsDisplayed.</param>
        /// <param name="supplyCount">Исходное значение свойства SupplyCount.</param>
        /// <param name="deputy_ID">Исходное значение свойства Deputy_ID.</param>
        /// <param name="squadDuty_ID">Исходное значение свойства SquadDuty_ID.</param>
        /// <param name="squadron_ID">Исходное значение свойства Squadron_ID.</param>
        public static Squad CreateSquad(global::System.Int32 id, global::System.String number, global::System.Int32 agentOfficers, global::System.Int32 agentSemiOfficers, global::System.Int32 agentSoldiers, global::System.Int32 task, global::System.Boolean isDeparted, global::System.Boolean isDressed, global::System.Boolean isDisplayed, global::System.Int32 supplyCount, global::System.Int32 deputy_ID, global::System.Int32 squadDuty_ID, global::System.Int32 squadron_ID)
        {
            Squad squad = new Squad();
            squad.ID = id;
            squad.Number = number;
            squad.AgentOfficers = agentOfficers;
            squad.AgentSemiOfficers = agentSemiOfficers;
            squad.AgentSoldiers = agentSoldiers;
            squad.Task = task;
            squad.IsDeparted = isDeparted;
            squad.IsDressed = isDressed;
            squad.IsDisplayed = isDisplayed;
            squad.SupplyCount = supplyCount;
            squad.Deputy_ID = deputy_ID;
            squad.SquadDuty_ID = squadDuty_ID;
            squad.Squadron_ID = squadron_ID;
            return squad;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DepartureDate
        {
            get
            {
                return _DepartureDate;
            }
            set
            {
                OnDepartureDateChanging(value);
                ReportPropertyChanging("DepartureDate");
                _DepartureDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartureDate");
                OnDepartureDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DepartureDate;
        partial void OnDepartureDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDepartureDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProxyNumber
        {
            get
            {
                return _ProxyNumber;
            }
            set
            {
                OnProxyNumberChanging(value);
                ReportPropertyChanging("ProxyNumber");
                _ProxyNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProxyNumber");
                OnProxyNumberChanged();
            }
        }
        private global::System.String _ProxyNumber;
        partial void OnProxyNumberChanging(global::System.String value);
        partial void OnProxyNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProxyDate
        {
            get
            {
                return _ProxyDate;
            }
            set
            {
                OnProxyDateChanging(value);
                ReportPropertyChanging("ProxyDate");
                _ProxyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProxyDate");
                OnProxyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProxyDate;
        partial void OnProxyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProxyDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentOfficers
        {
            get
            {
                return _AgentOfficers;
            }
            set
            {
                OnAgentOfficersChanging(value);
                ReportPropertyChanging("AgentOfficers");
                _AgentOfficers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgentOfficers");
                OnAgentOfficersChanged();
            }
        }
        private global::System.Int32 _AgentOfficers;
        partial void OnAgentOfficersChanging(global::System.Int32 value);
        partial void OnAgentOfficersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentSemiOfficers
        {
            get
            {
                return _AgentSemiOfficers;
            }
            set
            {
                OnAgentSemiOfficersChanging(value);
                ReportPropertyChanging("AgentSemiOfficers");
                _AgentSemiOfficers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgentSemiOfficers");
                OnAgentSemiOfficersChanged();
            }
        }
        private global::System.Int32 _AgentSemiOfficers;
        partial void OnAgentSemiOfficersChanging(global::System.Int32 value);
        partial void OnAgentSemiOfficersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AgentSoldiers
        {
            get
            {
                return _AgentSoldiers;
            }
            set
            {
                OnAgentSoldiersChanging(value);
                ReportPropertyChanging("AgentSoldiers");
                _AgentSoldiers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgentSoldiers");
                OnAgentSoldiersChanged();
            }
        }
        private global::System.Int32 _AgentSoldiers;
        partial void OnAgentSoldiersChanging(global::System.Int32 value);
        partial void OnAgentSoldiersChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Task
        {
            get
            {
                return _Task;
            }
            set
            {
                OnTaskChanging(value);
                ReportPropertyChanging("Task");
                _Task = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Task");
                OnTaskChanged();
            }
        }
        private global::System.Int32 _Task;
        partial void OnTaskChanging(global::System.Int32 value);
        partial void OnTaskChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeparted
        {
            get
            {
                return _IsDeparted;
            }
            set
            {
                OnIsDepartedChanging(value);
                ReportPropertyChanging("IsDeparted");
                _IsDeparted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeparted");
                OnIsDepartedChanged();
            }
        }
        private global::System.Boolean _IsDeparted;
        partial void OnIsDepartedChanging(global::System.Boolean value);
        partial void OnIsDepartedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDressed
        {
            get
            {
                return _IsDressed;
            }
            set
            {
                OnIsDressedChanging(value);
                ReportPropertyChanging("IsDressed");
                _IsDressed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDressed");
                OnIsDressedChanged();
            }
        }
        private global::System.Boolean _IsDressed;
        partial void OnIsDressedChanging(global::System.Boolean value);
        partial void OnIsDressedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDisplayed
        {
            get
            {
                return _IsDisplayed;
            }
            set
            {
                OnIsDisplayedChanging(value);
                ReportPropertyChanging("IsDisplayed");
                _IsDisplayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDisplayed");
                OnIsDisplayedChanged();
            }
        }
        private global::System.Boolean _IsDisplayed;
        partial void OnIsDisplayedChanging(global::System.Boolean value);
        partial void OnIsDisplayedChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplyCount
        {
            get
            {
                return _SupplyCount;
            }
            set
            {
                OnSupplyCountChanging(value);
                ReportPropertyChanging("SupplyCount");
                _SupplyCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplyCount");
                OnSupplyCountChanged();
            }
        }
        private global::System.Int32 _SupplyCount;
        partial void OnSupplyCountChanging(global::System.Int32 value);
        partial void OnSupplyCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderSoldier_ID
        {
            get
            {
                return _OrderSoldier_ID;
            }
            set
            {
                OnOrderSoldier_IDChanging(value);
                ReportPropertyChanging("OrderSoldier_ID");
                _OrderSoldier_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderSoldier_ID");
                OnOrderSoldier_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderSoldier_ID;
        partial void OnOrderSoldier_IDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderSoldier_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Deputy_ID
        {
            get
            {
                return _Deputy_ID;
            }
            set
            {
                OnDeputy_IDChanging(value);
                ReportPropertyChanging("Deputy_ID");
                _Deputy_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deputy_ID");
                OnDeputy_IDChanged();
            }
        }
        private global::System.Int32 _Deputy_ID;
        partial void OnDeputy_IDChanging(global::System.Int32 value);
        partial void OnDeputy_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SquadDuty_ID
        {
            get
            {
                return _SquadDuty_ID;
            }
            set
            {
                OnSquadDuty_IDChanging(value);
                ReportPropertyChanging("SquadDuty_ID");
                _SquadDuty_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SquadDuty_ID");
                OnSquadDuty_IDChanged();
            }
        }
        private global::System.Int32 _SquadDuty_ID;
        partial void OnSquadDuty_IDChanging(global::System.Int32 value);
        partial void OnSquadDuty_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Squadron_ID
        {
            get
            {
                return _Squadron_ID;
            }
            set
            {
                OnSquadron_IDChanging(value);
                ReportPropertyChanging("Squadron_ID");
                _Squadron_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Squadron_ID");
                OnSquadron_IDChanged();
            }
        }
        private global::System.Int32 _Squadron_ID;
        partial void OnSquadron_IDChanging(global::System.Int32 value);
        partial void OnSquadron_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Echelon_ID
        {
            get
            {
                return _Echelon_ID;
            }
            set
            {
                OnEchelon_IDChanging(value);
                ReportPropertyChanging("Echelon_ID");
                _Echelon_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Echelon_ID");
                OnEchelon_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Echelon_ID;
        partial void OnEchelon_IDChanging(Nullable<global::System.Int32> value);
        partial void OnEchelon_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderWareNumber
        {
            get
            {
                return _OrderWareNumber;
            }
            set
            {
                OnOrderWareNumberChanging(value);
                ReportPropertyChanging("OrderWareNumber");
                _OrderWareNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderWareNumber");
                OnOrderWareNumberChanged();
            }
        }
        private global::System.String _OrderWareNumber;
        partial void OnOrderWareNumberChanging(global::System.String value);
        partial void OnOrderWareNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OrderWareDate
        {
            get
            {
                return _OrderWareDate;
            }
            set
            {
                OnOrderWareDateChanging(value);
                ReportPropertyChanging("OrderWareDate");
                _OrderWareDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderWareDate");
                OnOrderWareDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OrderWareDate;
        partial void OnOrderWareDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOrderWareDateChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_Deputy", "Deputy")]
        public Deputy Deputy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deputy>("BrandNewModel.FK_Squad_Deputy", "Deputy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deputy>("BrandNewModel.FK_Squad_Deputy", "Deputy").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deputy> DeputyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deputy>("BrandNewModel.FK_Squad_Deputy", "Deputy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deputy>("BrandNewModel.FK_Squad_Deputy", "Deputy", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_Echelon", "Echelon")]
        public Echelon Echelon
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Echelon>("BrandNewModel.FK_Squad_Echelon", "Echelon").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Echelon>("BrandNewModel.FK_Squad_Echelon", "Echelon").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Echelon> EchelonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Echelon>("BrandNewModel.FK_Squad_Echelon", "Echelon");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Echelon>("BrandNewModel.FK_Squad_Echelon", "Echelon", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_OrderSoldier", "OrderSoldier")]
        public OrderSoldier OrderSoldier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderSoldier>("BrandNewModel.FK_Squad_OrderSoldier", "OrderSoldier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderSoldier>("BrandNewModel.FK_Squad_OrderSoldier", "OrderSoldier").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderSoldier> OrderSoldierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderSoldier>("BrandNewModel.FK_Squad_OrderSoldier", "OrderSoldier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderSoldier>("BrandNewModel.FK_Squad_OrderSoldier", "OrderSoldier", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_Squad", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Squad", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_Squad", "Recruit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitsLog_NewSquad", "RecruitsLog")]
        public EntityCollection<RecruitsLog> RecruitsLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecruitsLog>("BrandNewModel.FK_RecruitsLog_NewSquad", "RecruitsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecruitsLog>("BrandNewModel.FK_RecruitsLog_NewSquad", "RecruitsLog", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_RecruitsLog_OldSquad", "RecruitsLog")]
        public EntityCollection<RecruitsLog> RecruitsLog1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecruitsLog>("BrandNewModel.FK_RecruitsLog_OldSquad", "RecruitsLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecruitsLog>("BrandNewModel.FK_RecruitsLog_OldSquad", "RecruitsLog", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_SquadDuty", "SquadDuty")]
        public SquadDuty SquadDuty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SquadDuty>("BrandNewModel.FK_Squad_SquadDuty", "SquadDuty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SquadDuty>("BrandNewModel.FK_Squad_SquadDuty", "SquadDuty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SquadDuty> SquadDutyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SquadDuty>("BrandNewModel.FK_Squad_SquadDuty", "SquadDuty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SquadDuty>("BrandNewModel.FK_Squad_SquadDuty", "SquadDuty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_Squadron", "Squadron")]
        public Squadron Squadron
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squadron>("BrandNewModel.FK_Squad_Squadron", "Squadron").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squadron>("BrandNewModel.FK_Squad_Squadron", "Squadron").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Squadron> SquadronReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Squadron>("BrandNewModel.FK_Squad_Squadron", "Squadron");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Squadron>("BrandNewModel.FK_Squad_Squadron", "Squadron", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="SquadDuty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SquadDuty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта SquadDuty.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="militarySpecs1">Исходное значение свойства MilitarySpecs1.</param>
        /// <param name="militarySpecs2">Исходное значение свойства MilitarySpecs2.</param>
        /// <param name="militarySpecs3">Исходное значение свойства MilitarySpecs3.</param>
        /// <param name="dutyForm_ID">Исходное значение свойства DutyForm_ID.</param>
        public static SquadDuty CreateSquadDuty(global::System.Int32 id, global::System.String militarySpecs1, global::System.String militarySpecs2, global::System.String militarySpecs3, global::System.Int32 dutyForm_ID)
        {
            SquadDuty squadDuty = new SquadDuty();
            squadDuty.ID = id;
            squadDuty.MilitarySpecs1 = militarySpecs1;
            squadDuty.MilitarySpecs2 = militarySpecs2;
            squadDuty.MilitarySpecs3 = militarySpecs3;
            squadDuty.DutyForm_ID = dutyForm_ID;
            return squadDuty;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MilitarySpecs1
        {
            get
            {
                return _MilitarySpecs1;
            }
            set
            {
                OnMilitarySpecs1Changing(value);
                ReportPropertyChanging("MilitarySpecs1");
                _MilitarySpecs1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MilitarySpecs1");
                OnMilitarySpecs1Changed();
            }
        }
        private global::System.String _MilitarySpecs1;
        partial void OnMilitarySpecs1Changing(global::System.String value);
        partial void OnMilitarySpecs1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MilitarySpecs2
        {
            get
            {
                return _MilitarySpecs2;
            }
            set
            {
                OnMilitarySpecs2Changing(value);
                ReportPropertyChanging("MilitarySpecs2");
                _MilitarySpecs2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MilitarySpecs2");
                OnMilitarySpecs2Changed();
            }
        }
        private global::System.String _MilitarySpecs2;
        partial void OnMilitarySpecs2Changing(global::System.String value);
        partial void OnMilitarySpecs2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MilitarySpecs3
        {
            get
            {
                return _MilitarySpecs3;
            }
            set
            {
                OnMilitarySpecs3Changing(value);
                ReportPropertyChanging("MilitarySpecs3");
                _MilitarySpecs3 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MilitarySpecs3");
                OnMilitarySpecs3Changed();
            }
        }
        private global::System.String _MilitarySpecs3;
        partial void OnMilitarySpecs3Changing(global::System.String value);
        partial void OnMilitarySpecs3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DutyForm_ID
        {
            get
            {
                return _DutyForm_ID;
            }
            set
            {
                OnDutyForm_IDChanging(value);
                ReportPropertyChanging("DutyForm_ID");
                _DutyForm_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DutyForm_ID");
                OnDutyForm_IDChanged();
            }
        }
        private global::System.Int32 _DutyForm_ID;
        partial void OnDutyForm_IDChanging(global::System.Int32 value);
        partial void OnDutyForm_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_SquadDuty_DutyForm", "DutyForm")]
        public DutyForm DutyForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DutyForm>("BrandNewModel.FK_SquadDuty_DutyForm", "DutyForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DutyForm>("BrandNewModel.FK_SquadDuty_DutyForm", "DutyForm").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DutyForm> DutyFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DutyForm>("BrandNewModel.FK_SquadDuty_DutyForm", "DutyForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DutyForm>("BrandNewModel.FK_SquadDuty_DutyForm", "DutyForm", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_SquadDuty", "Squad")]
        public EntityCollection<Squad> Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squad>("BrandNewModel.FK_Squad_SquadDuty", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squad>("BrandNewModel.FK_Squad_SquadDuty", "Squad", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "SpecialitySquadDuty", "Speciality")]
        public EntityCollection<Speciality> Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Speciality>("BrandNewModel.SpecialitySquadDuty", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Speciality>("BrandNewModel.SpecialitySquadDuty", "Speciality", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Squadron")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Squadron : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Squadron.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="isCentral">Исходное значение свойства IsCentral.</param>
        /// <param name="isLocal">Исходное значение свойства IsLocal.</param>
        /// <param name="militaryUnit_ID">Исходное значение свойства MilitaryUnit_ID.</param>
        /// <param name="season_ID">Исходное значение свойства Season_ID.</param>
        public static Squadron CreateSquadron(global::System.Int32 id, global::System.Boolean isCentral, global::System.Boolean isLocal, global::System.Int32 militaryUnit_ID, global::System.Int32 season_ID)
        {
            Squadron squadron = new Squadron();
            squadron.ID = id;
            squadron.IsCentral = isCentral;
            squadron.IsLocal = isLocal;
            squadron.MilitaryUnit_ID = militaryUnit_ID;
            squadron.Season_ID = season_ID;
            return squadron;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCentral
        {
            get
            {
                return _IsCentral;
            }
            set
            {
                OnIsCentralChanging(value);
                ReportPropertyChanging("IsCentral");
                _IsCentral = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCentral");
                OnIsCentralChanged();
            }
        }
        private global::System.Boolean _IsCentral;
        partial void OnIsCentralChanging(global::System.Boolean value);
        partial void OnIsCentralChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocal
        {
            get
            {
                return _IsLocal;
            }
            set
            {
                OnIsLocalChanging(value);
                ReportPropertyChanging("IsLocal");
                _IsLocal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocal");
                OnIsLocalChanged();
            }
        }
        private global::System.Boolean _IsLocal;
        partial void OnIsLocalChanging(global::System.Boolean value);
        partial void OnIsLocalChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MilitaryUnit_ID
        {
            get
            {
                return _MilitaryUnit_ID;
            }
            set
            {
                OnMilitaryUnit_IDChanging(value);
                ReportPropertyChanging("MilitaryUnit_ID");
                _MilitaryUnit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MilitaryUnit_ID");
                OnMilitaryUnit_IDChanged();
            }
        }
        private global::System.Int32 _MilitaryUnit_ID;
        partial void OnMilitaryUnit_IDChanging(global::System.Int32 value);
        partial void OnMilitaryUnit_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Season_ID
        {
            get
            {
                return _Season_ID;
            }
            set
            {
                OnSeason_IDChanging(value);
                ReportPropertyChanging("Season_ID");
                _Season_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Season_ID");
                OnSeason_IDChanged();
            }
        }
        private global::System.Int32 _Season_ID;
        partial void OnSeason_IDChanging(global::System.Int32 value);
        partial void OnSeason_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squadron_MilitaryUnit", "MilitaryUnit")]
        public MilitaryUnit MilitaryUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryUnit>("BrandNewModel.FK_Squadron_MilitaryUnit", "MilitaryUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryUnit>("BrandNewModel.FK_Squadron_MilitaryUnit", "MilitaryUnit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MilitaryUnit> MilitaryUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryUnit>("BrandNewModel.FK_Squadron_MilitaryUnit", "MilitaryUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MilitaryUnit>("BrandNewModel.FK_Squadron_MilitaryUnit", "MilitaryUnit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squadron_Season", "Season")]
        public Season Season
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_Squadron_Season", "Season").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_Squadron_Season", "Season").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Season> SeasonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Season>("BrandNewModel.FK_Squadron_Season", "Season");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Season>("BrandNewModel.FK_Squadron_Season", "Season", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Squad_Squadron", "Squad")]
        public EntityCollection<Squad> Squad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Squad>("BrandNewModel.FK_Squad_Squadron", "Squad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Squad>("BrandNewModel.FK_Squad_Squadron", "Squad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Station")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Station : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Station.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="militaryDistrict_ID">Исходное значение свойства MilitaryDistrict_ID.</param>
        /// <param name="railroad_ID">Исходное значение свойства Railroad_ID.</param>
        public static Station CreateStation(global::System.Int32 id, global::System.String name, global::System.Int32 militaryDistrict_ID, global::System.Int32 railroad_ID)
        {
            Station station = new Station();
            station.ID = id;
            station.Name = name;
            station.MilitaryDistrict_ID = militaryDistrict_ID;
            station.Railroad_ID = railroad_ID;
            return station;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MilitaryDistrict_ID
        {
            get
            {
                return _MilitaryDistrict_ID;
            }
            set
            {
                OnMilitaryDistrict_IDChanging(value);
                ReportPropertyChanging("MilitaryDistrict_ID");
                _MilitaryDistrict_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MilitaryDistrict_ID");
                OnMilitaryDistrict_IDChanged();
            }
        }
        private global::System.Int32 _MilitaryDistrict_ID;
        partial void OnMilitaryDistrict_IDChanging(global::System.Int32 value);
        partial void OnMilitaryDistrict_IDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Railroad_ID
        {
            get
            {
                return _Railroad_ID;
            }
            set
            {
                OnRailroad_IDChanging(value);
                ReportPropertyChanging("Railroad_ID");
                _Railroad_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Railroad_ID");
                OnRailroad_IDChanged();
            }
        }
        private global::System.Int32 _Railroad_ID;
        partial void OnRailroad_IDChanging(global::System.Int32 value);
        partial void OnRailroad_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Station_MilitaryDistrict", "MilitaryDistrict")]
        public MilitaryDistrict MilitaryDistrict
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryDistrict>("BrandNewModel.FK_Station_MilitaryDistrict", "MilitaryDistrict").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryDistrict>("BrandNewModel.FK_Station_MilitaryDistrict", "MilitaryDistrict").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MilitaryDistrict> MilitaryDistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryDistrict>("BrandNewModel.FK_Station_MilitaryDistrict", "MilitaryDistrict");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MilitaryDistrict>("BrandNewModel.FK_Station_MilitaryDistrict", "MilitaryDistrict", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_MilitaryUnit_Station", "MilitaryUnit")]
        public EntityCollection<MilitaryUnit> MilitaryUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MilitaryUnit>("BrandNewModel.FK_MilitaryUnit_Station", "MilitaryUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MilitaryUnit>("BrandNewModel.FK_MilitaryUnit_Station", "MilitaryUnit", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Station_Railroad", "Railroad")]
        public Railroad Railroad
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Railroad>("BrandNewModel.FK_Station_Railroad", "Railroad").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Railroad>("BrandNewModel.FK_Station_Railroad", "Railroad").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Railroad> RailroadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Railroad>("BrandNewModel.FK_Station_Railroad", "Railroad");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Railroad>("BrandNewModel.FK_Station_Railroad", "Railroad", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="TDT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TDT : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TDT.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="column1">Исходное значение свойства Column1.</param>
        /// <param name="column2">Исходное значение свойства Column2.</param>
        /// <param name="column3">Исходное значение свойства Column3.</param>
        /// <param name="column4">Исходное значение свойства Column4.</param>
        /// <param name="column5">Исходное значение свойства Column5.</param>
        /// <param name="column6">Исходное значение свойства Column6.</param>
        /// <param name="column7">Исходное значение свойства Column7.</param>
        /// <param name="column8">Исходное значение свойства Column8.</param>
        /// <param name="column9">Исходное значение свойства Column9.</param>
        /// <param name="column10">Исходное значение свойства Column10.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static TDT CreateTDT(global::System.Int32 id, global::System.Boolean column1, global::System.Boolean column2, global::System.Boolean column3, global::System.Boolean column4, global::System.Boolean column5, global::System.Boolean column6, global::System.Boolean column7, global::System.Boolean column8, global::System.Boolean column9, global::System.Boolean column10, global::System.String name)
        {
            TDT tDT = new TDT();
            tDT.ID = id;
            tDT.Column1 = column1;
            tDT.Column2 = column2;
            tDT.Column3 = column3;
            tDT.Column4 = column4;
            tDT.Column5 = column5;
            tDT.Column6 = column6;
            tDT.Column7 = column7;
            tDT.Column8 = column8;
            tDT.Column9 = column9;
            tDT.Column10 = column10;
            tDT.Name = name;
            return tDT;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private global::System.Boolean _Column1;
        partial void OnColumn1Changing(global::System.Boolean value);
        partial void OnColumn1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column2
        {
            get
            {
                return _Column2;
            }
            set
            {
                OnColumn2Changing(value);
                ReportPropertyChanging("Column2");
                _Column2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column2");
                OnColumn2Changed();
            }
        }
        private global::System.Boolean _Column2;
        partial void OnColumn2Changing(global::System.Boolean value);
        partial void OnColumn2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column3
        {
            get
            {
                return _Column3;
            }
            set
            {
                OnColumn3Changing(value);
                ReportPropertyChanging("Column3");
                _Column3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column3");
                OnColumn3Changed();
            }
        }
        private global::System.Boolean _Column3;
        partial void OnColumn3Changing(global::System.Boolean value);
        partial void OnColumn3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column4
        {
            get
            {
                return _Column4;
            }
            set
            {
                OnColumn4Changing(value);
                ReportPropertyChanging("Column4");
                _Column4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column4");
                OnColumn4Changed();
            }
        }
        private global::System.Boolean _Column4;
        partial void OnColumn4Changing(global::System.Boolean value);
        partial void OnColumn4Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column5
        {
            get
            {
                return _Column5;
            }
            set
            {
                OnColumn5Changing(value);
                ReportPropertyChanging("Column5");
                _Column5 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column5");
                OnColumn5Changed();
            }
        }
        private global::System.Boolean _Column5;
        partial void OnColumn5Changing(global::System.Boolean value);
        partial void OnColumn5Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column6
        {
            get
            {
                return _Column6;
            }
            set
            {
                OnColumn6Changing(value);
                ReportPropertyChanging("Column6");
                _Column6 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column6");
                OnColumn6Changed();
            }
        }
        private global::System.Boolean _Column6;
        partial void OnColumn6Changing(global::System.Boolean value);
        partial void OnColumn6Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column7
        {
            get
            {
                return _Column7;
            }
            set
            {
                OnColumn7Changing(value);
                ReportPropertyChanging("Column7");
                _Column7 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column7");
                OnColumn7Changed();
            }
        }
        private global::System.Boolean _Column7;
        partial void OnColumn7Changing(global::System.Boolean value);
        partial void OnColumn7Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column8
        {
            get
            {
                return _Column8;
            }
            set
            {
                OnColumn8Changing(value);
                ReportPropertyChanging("Column8");
                _Column8 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column8");
                OnColumn8Changed();
            }
        }
        private global::System.Boolean _Column8;
        partial void OnColumn8Changing(global::System.Boolean value);
        partial void OnColumn8Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column9
        {
            get
            {
                return _Column9;
            }
            set
            {
                OnColumn9Changing(value);
                ReportPropertyChanging("Column9");
                _Column9 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column9");
                OnColumn9Changed();
            }
        }
        private global::System.Boolean _Column9;
        partial void OnColumn9Changing(global::System.Boolean value);
        partial void OnColumn9Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Column10
        {
            get
            {
                return _Column10;
            }
            set
            {
                OnColumn10Changing(value);
                ReportPropertyChanging("Column10");
                _Column10 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column10");
                OnColumn10Changed();
            }
        }
        private global::System.Boolean _Column10;
        partial void OnColumn10Changing(global::System.Boolean value);
        partial void OnColumn10Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Recruit_TDT", "Recruit")]
        public EntityCollection<Recruit> Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_TDT", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Recruit>("BrandNewModel.FK_Recruit_TDT", "Recruit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrandNewModel", Name="Token")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Token : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Token.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="serial">Исходное значение свойства Serial.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="recruit_ID">Исходное значение свойства Recruit_ID.</param>
        public static Token CreateToken(global::System.Int32 id, global::System.String serial, global::System.String number, global::System.Int32 recruit_ID)
        {
            Token token = new Token();
            token.ID = id;
            token.Serial = serial;
            token.Number = number;
            token.Recruit_ID = recruit_ID;
            return token;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial
        {
            get
            {
                return _Serial;
            }
            set
            {
                OnSerialChanging(value);
                ReportPropertyChanging("Serial");
                _Serial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial");
                OnSerialChanged();
            }
        }
        private global::System.String _Serial;
        partial void OnSerialChanging(global::System.String value);
        partial void OnSerialChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Recruit_ID
        {
            get
            {
                return _Recruit_ID;
            }
            set
            {
                OnRecruit_IDChanging(value);
                ReportPropertyChanging("Recruit_ID");
                _Recruit_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Recruit_ID");
                OnRecruit_IDChanged();
            }
        }
        private global::System.Int32 _Recruit_ID;
        partial void OnRecruit_IDChanging(global::System.Int32 value);
        partial void OnRecruit_IDChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrandNewModel", "FK_Token_Recruit", "Recruit")]
        public Recruit Recruit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Token_Recruit", "Recruit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Token_Recruit", "Recruit").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recruit> RecruitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recruit>("BrandNewModel.FK_Token_Recruit", "Recruit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recruit>("BrandNewModel.FK_Token_Recruit", "Recruit", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
